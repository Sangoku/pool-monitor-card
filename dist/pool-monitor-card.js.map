{"version":3,"file":"pool-monitor-card.js","sources":["../src/locales/en.js","../src/locales/fr.js","../src/locales/es.js","../src/locales/de.js","../src/locales/it.js","../src/locales/nl.js","../src/locales/pt.js","../src/locales/pt-br.js","../src/locales/ro.js","../src/locales/sk.js","../src/locales/he.js","../src/locales/ru.js","../src/locales/translations.js","../src/configs/config.js","../src/constants.js","../src/styles/styles.js","../src/components/card-content.js","../src/pool_monitor_card.js"],"sourcesContent":["/**\n * @fileoverview English translations for the Pool Monitor Card\n * @description Contains all English language strings used in the card interface\n */\n\n/**\n * @const {Object} translations\n * @description English translation strings organized by category\n * @property {Object} state - Sensor state descriptions\n * @property {string} state.1 - Description for very low values\n * @property {string} state.2 - Description for low but acceptable values\n * @property {string} state.3 - Description for ideal lower range values\n * @property {string} state.4 - Description for ideal upper range values\n * @property {string} state.5 - Description for high but acceptable values\n * @property {string} state.6 - Description for very high values\n * \n * @property {Object} sensor - Sensor name translations\n * @property {string} sensor.temperature - Primary temperature sensor name\n * @property {string} sensor.temperature_2 - Secondary temperature sensor name\n * @property {string} sensor.ph - pH level sensor name\n * @property {string} sensor.orp - ORP (Oxidation Reduction Potential) sensor name\n * @property {string} sensor.tds - TDS (Total Dissolved Solids) sensor name\n * @property {string} sensor.salinity - Salinity sensor name\n * @property {string} sensor.cya - Cyanuric acid sensor name\n * @property {string} sensor.calcium - Calcium level sensor name\n * @property {string} sensor.phosphate - Phosphate level sensor name\n * @property {string} sensor.alkalinity - Alkalinity level sensor name\n * @property {string} sensor.free_chlorine - Free chlorine level sensor name\n * @property {string} sensor.total_chlorine - Total chlorine level sensor name\n * @property {string} sensor.pressure - Filter pressure sensor name\n * @property {string} sensor.sg - Specific gravity sensor name\n * @property {string} sensor.magnesium - Magnesium level sensor name\n * @property {string} sensor.water_level - Water level sensor name\n * @property {string} sensor.flow_rate - Flow rate sensor name\n * @property {string} sensor.uv_radiation - UV radiation sensor name\n * @property {string} sensor.product_volume - Product volume sensor name\n * @property {string} sensor.product_weight - Product weight sensor name\n * @property {string} sensor.electrical_conductivity - Electrical Conductivity sensor name\n * \n * @property {Object} time - Time-related translations\n * @property {string} time.seconds - Text for events that just happened\n * @property {string} time.minutes - Text format for minutes ago (uses {minutes} and {plural} placeholders)\n * @property {string} time.hours - Text format for hours ago (uses {hours} and {plural} placeholders)\n * @property {string} time.days - Text format for days ago (uses {days} and {plural} placeholders)\n */\nexport default {\n  state: {\n    1: 'Too Low',\n    2: 'Acceptable Low',\n    3: 'Ideal',\n    4: 'Ideal',\n    5: 'Acceptable High',\n    6: 'Too High',\n  },\n  sensor: {\n    temperature: 'Temperature',\n    temperature_2: 'Temperature 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinity',\n    cya: 'Cyanuric Acid',\n    calcium: 'Calcium',\n    phosphate: 'Phosphate',\n    alkalinity: 'Alkalinity',\n    free_chlorine: 'Free Chlorine',\n    total_chlorine: 'Total Chlorine',\n    pressure: 'Filter Pressure',\n    sg: 'Specific Gravity',\n    magnesium: 'Magnesium',\n    water_level: 'Water Level',\n    flow_rate: 'Flow Rate',\n    uv_radiation: 'UV Radiation',\n    product_volume: 'Product Volume',\n    product_weight: 'Product Weight',\n    electrical_conductivity: 'Electrical Conductivity',\n  },\n  time: {\n    seconds: 'just now',\n    minutes: '{minutes} minute{plural} ago',\n    hours: '{hours} hour{plural} ago',\n    days: '{days} day{plural} ago',\n  },\n};\n","export default {\n  state: {\n    1: 'Trop bas',\n    2: 'Acceptable bas',\n    3: 'Idéal',\n    4: 'Idéal',\n    5: 'Acceptable élevé',\n    6: 'Trop élevé',\n  },\n  sensor: {\n    temperature: 'Température',\n    temperature_2: 'Température 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinité',\n    cya: 'Acide cyanurique',\n    calcium: 'Calcium',\n    phosphate: 'Phosphate',\n    alkalinity: 'Alcalinité',\n    free_chlorine: 'Chlore libre',\n    total_chlorine: 'Chlore total',\n    pressure: 'Pression du filtre',\n    sg: 'Densité spécifique',\n    magnesium: 'Magnésium',\n    water_level: \"Niveau d'eau\",\n    flow_rate: 'Débit',\n    uv_radiation: 'Radiation UV',\n    product_volume: 'Volume Produit',\n    product_weight: 'Poids Produit',\n    electrical_conductivity: 'Conductivité Électrique',\n  },\n  time: {\n    seconds: 'il y a {seconds} seconde{plural}',\n    minutes: 'il y a {minutes} minute{plural}',\n    hours: 'il y a {hours} heure{plural}',\n    days: 'il y a {days} jour{plural}',\n  },\n};\n","export default {\n  state: {\n    1: 'Demasiado bajo',\n    2: 'Aceptable bajo',\n    3: 'Perfecto',\n    4: 'Perfecto',\n    5: 'Aceptable alto',\n    6: 'Demasiado alto',\n  },\n  sensor: {\n    temperature: 'Temperatura',\n    temperature_2: 'Temperatura 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinidad',\n    cya: 'Acido cianúrico',\n    calcium: 'Calcio',\n    phosphate: 'Fosfato',\n    alkalinity: 'Alcalinidad',\n    free_chlorine: 'Cloro libre',\n    total_chlorine: 'Cloro total',\n    pressure: 'Pressione du filter relativa',\n    sg: 'Densidad relativa',\n    magnesium: 'Magnesio',\n    water_level: 'Nivel de agua',\n    flow_rate: 'Caudal',\n    uv_radiation: 'Radiación UV',\n    product_volume: 'Volumen Producto',\n    product_weight: 'Peso Producto',\n    electrical_conductivity: 'Conductividad Eléctrica',\n  },\n  time: {\n    seconds: 'justo ahora',\n    minutes: 'hace {minutes} minuto{plural}',\n    hours: 'hace {hours} hora{plural}',\n    days: 'hace {days} día{plural}',\n  },\n};\n","export default {\n  state: {\n    1: 'Zu niedrig',\n    2: 'Akzeptabler Tiefstwert',\n    3: 'Ideal',\n    4: 'Ideal',\n    5: 'Akzeptabler Hochwert',\n    6: 'Zu hoch',\n  },\n  sensor: {\n    temperature: 'Temperatur',\n    temperature_2: 'Temperatur 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salzgehalt',\n    cya: 'Cyanursäure',\n    calcium: 'Kalzium',\n    phosphate: 'Phosphat',\n    alkalinity: 'Alkalinität',\n    free_chlorine: 'Freies Chlor',\n    total_chlorine: 'Gesamtchlor',\n    pressure: 'Sandfilterdruck',\n    sg: 'Spezifisches Gewicht',\n    magnesium: 'Magnesium',\n    water_level: 'Wasserstand',\n    flow_rate: 'Durchfluss',\n    uv_radiation: 'UV-Strahlung',\n    product_volume: 'Produktvolumen',\n    product_weight: 'Produktgewicht',\n    electrical_conductivity: 'Elektrische Leitfähigkeit',\n  },\n  time: {\n    seconds: 'gerade erst',\n    minutes: 'vor {minutes} Minute{plural}',\n    hours: 'vor {hours} Stunde{plural}',\n    days: 'vor {days} Tag{plural}',\n  },\n};\n","export default {\n  state: {\n    1: 'Troppo basso',\n    2: 'Accettabile basso',\n    3: 'Ideale',\n    4: 'Ideale',\n    5: 'Accettabile alto',\n    6: 'Troppo alto',\n  },\n  sensor: {\n    temperature: 'Temperatura',\n    temperature_2: 'Temperatura 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinità',\n    cya: 'Acido cianurico',\n    calcium: 'Calcio',\n    phosphate: 'Fosfato',\n    alkalinity: 'Alcalinità',\n    free_chlorine: 'Cloro libero',\n    total_chlorine: 'Cloro totale',\n    pressure: 'Pressione filtro',\n    sg: 'Gravità specifica',\n    magnesium: 'Magnesio',\n    water_level: \"Livello dell'acqua\",\n    flow_rate: 'Portata',\n    uv_radiation: 'Radiazione UV',\n    product_volume: 'Volume prodotto',\n    product_weight: 'Peso prodotto',\n    electrical_conductivity: 'Conducibilità Elettrica',\n  },\n  time: {\n    seconds: 'proprio ora',\n    minutes: '{minutes} minuto{plural} fa',\n    hours: '{hours} ora{plural} fa',\n    days: '{days} giorno{plural} fa',\n  },\n};\n","export default {\n  state: {\n    1: 'Te laag',\n    2: 'Acceptabel laag',\n    3: 'Ideaal',\n    4: 'Ideaal',\n    5: 'Acceptabel hoog',\n    6: 'Te hoog',\n  },\n  sensor: {\n    temperature: 'Temperatuur',\n    temperature_2: 'Temperatuur 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Zoutgehalte',\n    cya: 'Cyanuurzuur',\n    calcium: 'Calcium',\n    phosphate: 'Fosfaat',\n    alkalinity: 'Alkaliteit',\n    free_chlorine: 'Vrij chloor',\n    total_chlorine: 'Totaal chloor',\n    pressure: 'Filterdruk',\n    sg: 'Soortelijk gewicht',\n    magnesium: 'Magnesium',\n    water_level: 'Waterniveau',\n    flow_rate: 'Debiet',\n    uv_radiation: 'UV-straling',\n    product_volume: 'Productvolume',\n    product_weight: 'Productgewicht',\n    electrical_conductivity: 'Elektrische Geleidbaarheid',\n  },\n  time: {\n    seconds: 'zojuist',\n    minutes: '{minutes} minuut{plural} geleden',\n    hours: '{hours} uur{plural} geleden',\n    days: '{days} dag{plural} geleden',\n  },\n};\n","export default {\n  state: {\n    1: 'Muito Baixo',\n    2: 'Torelavel mas Baixo',\n    3: 'Ideal',\n    4: 'Ideal',\n    5: 'Toleravel mas Alto',\n    6: 'Muito Alto',\n  },\n  sensor: {\n    temperature: 'Temperatura',\n    temperature_2: 'Temperatura 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinidade',\n    cya: 'Ácido cianúrico',\n    calcium: 'Calcio',\n    phosphate: 'Fosfato',\n    alkalinity: 'Alcalinidade',\n    free_chlorine: 'Cloro livres',\n    total_chlorine: 'Cloro total',\n    pressure: 'Pressão do filtro',\n    sg: 'Gravidade específica',\n    magnesium: 'Magnésio',\n    water_level: 'Nivel de agua',\n    flow_rate: 'Caudal',\n    uv_radiation: 'Radiação UV',\n    product_volume: 'Volume Produto',\n    product_weight: 'Peso Produto',\n    electrical_conductivity: 'Condutividade Elétrica',\n  },\n  time: {\n    seconds: 'Agora',\n    minutes: '{minutes} Muntos{plural} atrás',\n    hours: '{hours} horas{plural} atrás',\n    days: '{days} dias{plural} atrás',\n  },\n};\n","export default {\n  state: {\n    1: 'Muito Baixo',\n    2: 'Aceitavel Baixo',\n    3: 'Ideal',\n    4: 'Ideal',\n    5: 'Aceitavel Alto',\n    6: 'Muito Alto',\n  },\n  sensor: {\n    temperature: 'Temperatura',\n    temperature_2: 'Temperatura 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinidade',\n    cya: 'Acido Cianurico',\n    calcium: 'Calcio',\n    phosphate: 'Fosfato',\n    alkalinity: 'Alcalinidade',\n    free_chlorine: 'Cloro Livre',\n    total_chlorine: 'Cloro Total',\n    pressure: 'Pressão no Filtro',\n    sg: 'Gravidade específica',\n    magnesium: 'Magnésio',\n    water_level: 'Nivel de agua',\n    flow_rate: 'Caudal',\n    uv_radiation: 'Radiação UV',\n    product_volume: 'Volume Produto',\n    product_weight: 'Peso Produto',\n    electrical_conductivity: 'Condutividade Elétrica',\n  },\n  time: {\n    seconds: 'Agora mesmo',\n    minutes: '{minutes} minutos{plural} atras',\n    hours: '{hours} horas{plural} atras',\n    days: '{days} Dias{plural} atras',\n  },\n};\n","export default {\n  state: {\n    1: 'Prea mic',\n    2: 'Mic',\n    3: 'Ideal',\n    4: 'Ideal',\n    5: 'Mare',\n    6: 'Prea mare',\n  },\n  sensor: {\n    temperature: 'Temperatură',\n    temperature_2: 'Temperatură 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinitate',\n    cya: 'Acid cianuric',\n    calcium: 'Calciu',\n    phosphate: 'Fosfat',\n    alkalinity: 'Alcalinitate',\n    free_chlorine: 'Clor liber',\n    total_chlorine: 'Clor total',\n    pressure: 'Presiune filtru',\n    sg: 'Greutate specifică',\n    magnesium: 'Magneziu',\n    water_level: 'Nivel apă',\n    flow_rate: 'Debit',\n    uv_radiation: 'Radiație UV',\n    product_volume: 'Volum produs',\n    product_weight: 'Greutate produs',\n    electrical_conductivity: 'Conductivitate Electrică',\n  },\n  time: {\n    seconds: 'acum',\n    minutes: 'acum {minutes} minut{plural}',\n    hours: 'acum {hours} oră{plural}',\n    days: 'acum {days} zi{plural}',\n  },\n};\n","export default {\n  state: {\n    1: 'Príliš nízky',\n    2: 'Akceptovateľne nízky',\n    3: 'Ideálny',\n    4: 'Ideálny',\n    5: 'Akceptovateľne vysoký',\n    6: 'Príliš vysoký',\n  },\n  sensor: {\n    temperature: 'Teplota',\n    temperature_2: 'Teplota 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Salinita',\n    cya: 'Kyselina kyanurová',\n    calcium: 'Vápnik',\n    phosphate: 'Fosfát',\n    alkalinity: 'Alkalinita',\n    free_chlorine: 'Voľný chlór',\n    total_chlorine: 'Celkový chlór',\n    pressure: 'Tlak filtra',\n    sg: 'Špecifická hmotnosť',\n    magnesium: 'Magnézium',\n    water_level: 'Úroveň vody',\n    flow_rate: 'Prietok',\n    uv_radiation: 'UV žiarenie',\n    product_volume: 'Objem produktu',\n    product_weight: 'Hmotnosť produktu',\n    electrical_conductivity: 'Elektrická Vodivosť',\n  },\n  time: {\n    seconds: 'práve teraz',\n    minutes: '{minutes} minút{plural} pred',\n    hours: '{hours} hodín{plural} pred',\n    days: '{days} dní{plural} pred',\n  },\n};\n","export default {\n  state: {\n    1: 'נמוך מדי',\n    2: 'נמוך מאוד',\n    3: 'אידיאלי',\n    4: 'אידיאלי',\n    5: 'גבוה מאוד',\n    6: 'גבוה מדי',\n  },\n  sensor: {\n    temperature: 'טמפרטורה',\n    temperature_2: 'טמפרטורה 2',\n    ph: 'PH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'מליחות',\n    cya: 'חומצה ציאנורית',\n    calcium: 'סידן',\n    phosphate: 'פוספט',\n    alkalinity: 'אלקליניות',\n    free_chlorine: 'כלור חופשי',\n    total_chlorine: 'כלור כולל',\n    pressure: 'לחץ מסנן',\n    sg: 'משקל סגולי',\n    magnesium: 'מגנזיום',\n    water_level: 'מפלס מים',\n    flow_rate: 'קצב זרימה',\n    uv_radiation: 'קרינת UV',\n    product_volume: 'נפח מוצר',\n    product_weight: 'משקל מוצר',\n    electrical_conductivity: 'מוליכות חשמלית',\n  },\n  time: {\n    seconds: 'הרגע',\n    minutes: 'לפני {minutes} דקות',\n    hours: 'לפני {hours} שעות',\n    days: 'לפני {days} ימים',\n  },\n};\n","export default {\n  state: {\n    1: 'Слишком низкий',\n    2: 'Приемлемо низкий',\n    3: 'Идеальный',\n    4: 'Идеальный',\n    5: 'Приемлемо высокий',\n    6: 'Слишком высокий',\n  },\n  sensor: {\n    temperature: 'Температура',\n    temperature_2: 'Температура 2',\n    ph: 'pH',\n    orp: 'ORP',\n    tds: 'TDS',\n    salinity: 'Соленость',\n    cya: 'Циануровая кислота',\n    calcium: 'Кальций',\n    phosphate: 'Фосфаты',\n    alkalinity: 'Щелочность',\n    free_chlorine: 'Свободный хлор',\n    total_chlorine: 'Общий хлор',\n    pressure: 'Давление фильтра',\n    sg: 'Удельный вес',\n    magnesium: 'Магний',\n    water_level: 'Уровень воды',\n    flow_rate: 'Расход воды',\n    uv_radiation: 'УФ-излучение',\n    product_volume: 'Объем продукта',\n    product_weight: 'Вес продукта',\n    electrical_conductivity: 'Электропроводность',\n  },\n  time: {\n    seconds: '{seconds} секунд{plural}',\n    minutes: '{minutes} минут{plural} назад',\n    hours: '{hours} часов{plural} назад',\n    days: '{days} дней{plural} назад',\n  },\n};\n","/**\n * @fileoverview Translation system for the Pool Monitor Card\n * @description Manages translations and localization for the card interface.\n * Supports multiple languages with fallback to English if a translation is missing.\n */\n\nimport en from './en.js';\nimport fr from './fr.js';\nimport es from './es.js';\nimport de from './de.js';\nimport it from './it.js';\nimport nl from './nl.js';\nimport pt from './pt.js';\nimport ptBR from './pt-br.js';\nimport ro from './ro.js';\nimport sk from './sk.js';\nimport he from './he.js';\nimport ru from './ru.js';\n\n/**\n * @const {Object} translations\n * @description Collection of all available translations indexed by language code\n * Supported languages:\n * - en: English\n * - fr: French\n * - es: Spanish\n * - de: German\n * - it: Italian\n * - nl: Dutch\n * - pt: Portuguese\n * - pt-br: Brazilian Portuguese\n * - ro: Romanian\n * - sk: Slovak\n * - he: Hebrew\n * - ru: Russian\n */\nexport const translations = {\n  en,\n  fr,\n  es,\n  de,\n  it,\n  nl,\n  pt,\n  'pt-br': ptBR,\n  ro,\n  sk,\n  he,\n  ru,\n};\n\n/**\n * @function getTranslation\n * @description Retrieves a translation for a given key in the specified language\n * @param {string} lang - Language code (e.g., 'en', 'fr')\n * @param {string} key - Translation key (can be nested using dot notation)\n * @returns {string} The translated text or the key itself if translation not found\n * @example\n * getTranslation('en', 'common.temperature') // returns \"Temperature\"\n * getTranslation('fr', 'common.temperature') // returns \"Température\"\n */\nexport const getTranslation = (lang, key) => {\n  const keys = key.split('.');\n  let result = translations[lang] || translations.en;\n\n  for (const k of keys) {\n    if (result && typeof result === 'object') {\n      result = result[k];\n    } else {\n      return key; // Fallback to key if translation not found\n    }\n  }\n\n  return result || key;\n};\n\n/**\n * @function formatTranslation\n * @description Formats a translation string by replacing placeholders with values\n * @param {string} translation - The translation string containing placeholders\n * @param {Object} values - Object containing values to replace placeholders\n * @returns {string} The formatted translation string\n * @example\n * formatTranslation(\"Hello {name}!\", { name: \"John\" }) // returns \"Hello John!\"\n */\nexport const formatTranslation = (translation, values) => {\n  if (!values) return translation;\n\n  return Object.entries(values).reduce((acc, [key, value]) => {\n    return acc.replace(`{${key}}`, value);\n  }, translation);\n};\n","/**\n * @fileoverview Configuration definitions for the Pool Monitor Card\n */\n\n/**\n * @const {Object} DEFAULT_CONFIG - Default configuration for the Pool Monitor Card\n * @property {Object} display - Display settings\n * @property {boolean} display.compact - Whether to use compact display mode\n * @property {boolean} display.show_names - Whether to show sensor names\n * @property {boolean} display.show_labels - Whether to show labels\n * @property {boolean} display.show_last_updated - Whether to show last updated time\n * @property {boolean} display.show_icons - Whether to show icons\n * @property {boolean} display.show_units - Whether to show measurement units\n * @property {boolean} display.gradient - Whether to show gradient background\n * @property {string} display.language - Language code for translations\n * \n * @property {Object} colors - Color configuration\n * @property {string} colors.low - Color for low values\n * @property {string} colors.warn - Color for warning values\n * @property {string} colors.normal - Color for normal values\n * @property {string} colors.cool - Color for cool values\n * @property {string} colors.marker - Color for markers\n * @property {string} colors.hi_low - Color for high/low indicators\n * \n * @property {Object} sensors - Sensor configurations\n */\nexport const DEFAULT_CONFIG = {\n  display: {\n    compact: false,\n    show_names: true,\n    show_labels: true,\n    show_last_updated: false,\n    show_icons: true,\n    show_units: true,\n    gradient: true,\n    language: 'en',\n  },\n\n  colors: {\n    low: '#fdcb6e',\n    warn: '#e17055',\n    normal: '#00b894',\n    cool: '#00BFFF',\n    marker: '#000000',\n    hi_low: '#00000099',\n  },\n\n  sensors: {\n    temperature: {\n      name: 'Temperature',\n      unit: '°C',\n      setpoint: 27,\n      step: 1,\n      mode: 'heatflow',\n    },\n    orp: {\n      name: 'ORP',\n      unit: 'mV',\n      setpoint: 700,\n      step: 50,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    ec: {\n      name: 'Electrical Conductivity',\n      unit: 'µS/cm',\n      setpoint: 4000,\n      step: 200,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    tds: {\n      name: 'TDS',\n      unit: 'g/L',\n      setpoint: 5,\n      step: 0.5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    ph: {\n      name: 'pH',\n      unit: 'pH',\n      setpoint: 7.2,\n      step: 0.2,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    salinity: {\n      name: 'Salinity',\n      unit: 'ppm',\n      setpoint: 3000,\n      step: 500,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    cya: {\n      name: 'Cyanuric Acid',\n      unit: 'ppm',\n      setpoint: 40,\n      step: 10,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    calcium: {\n      name: 'Calcium',\n      unit: 'ppm',\n      setpoint: 300,\n      step: 100,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    phosphate: {\n      name: 'Phosphate',\n      unit: 'ppb',\n      setpoint: 50,\n      step: 10,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    alkalinity: {\n      name: 'Alkalinity',\n      unit: 'ppm',\n      setpoint: 100,\n      step: 20,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    free_chlorine: {\n      name: 'Free Chlorine',\n      unit: 'ppm',\n      setpoint: 3,\n      step: 0.5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    total_chlorine: {\n      name: 'Total Chlorine',\n      unit: 'ppm',\n      setpoint: 3,\n      step: 0.5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    pressure: {\n      name: 'Filter Pressure',\n      unit: 'psi',\n      setpoint: 12,\n      step: 2,\n      mode: 'centric',\n    },\n    specific_gravity: {\n      name: 'Specific Gravity',\n      unit: 'sg',\n      setpoint: 1.1,\n      step: 0.2,\n      mode: 'centric',\n    },\n    magnesium: {\n      name: 'Magnesium',\n      unit: 'ppm',\n      setpoint: 1200,\n      step: 100,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    water_level: {\n      name: 'Water Level',\n      unit: '%',\n      setpoint: 100,\n      step: 10,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    flow_rate: {\n      name: 'Flow Rate',\n      unit: 'm³/h',\n      setpoint: 10,\n      step: 1,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    uv_radiation: {\n      name: 'UV Radiation',\n      unit: 'mW/cm²',\n      setpoint: 4,\n      step: 1,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    product_volume: {\n      name: 'Product Volume',\n      unit: 'L',\n      setpoint: 20,\n      step: 5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    product_weight: {\n      name: 'Product Weight',\n      unit: 'kg',\n      setpoint: 25,\n      step: 5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n  },\n};\n\n/**\n * @function getSensorConfig\n * @description Get the sensor configuration for a specific sensor type\n * @param {string} type - The type of sensor to get configuration for\n * @returns {Object} The sensor configuration\n */\nexport function getSensorConfig(type) {\n  return DEFAULT_CONFIG.sensors[type];\n}\n\n/**\n * @function getDisplayConfig\n * @description Get the display configuration settings\n * @returns {Object} The display configuration\n */\nexport function getDisplayConfig() {\n  return DEFAULT_CONFIG.display;\n}\n\n/**\n * @function getColorConfig\n * @description Get the color configuration settings\n * @returns {Object} The color configuration\n */\nexport function getColorConfig() {\n  return DEFAULT_CONFIG.colors;\n}\n\n/**\n * @const {string[]} SUPPORTED_SENSORS - List of supported sensor types\n * @description Array of sensor types supported by the card, derived from sensor configuration\n */\nexport const SUPPORTED_SENSORS = Object.keys(DEFAULT_CONFIG.sensors);\n","/**\n * @fileoverview Constants used throughout the Pool Monitor Card\n * @version ${VERSION}\n */\n\n/** @const {string} VERSION - Current version of the card */\nconst VERSION = '2.1.0';\n/* global __BUILD_TIMESTAMP__ */\n/** @const {string} BUILD_TIMESTAMP - Build timestamp for the card */\nconst BUILD_TIMESTAMP = __BUILD_TIMESTAMP__ || 'dev';\n\n/** @const {string} CARD_VERSION - Complete version string including build timestamp */\nexport const CARD_VERSION = `${VERSION} (${BUILD_TIMESTAMP})`;\n\n/** \n * @const {Object} CARD_INFO - Basic information about the card\n * @property {string} cardType - Type identifier for the card\n * @property {string} cardName - Display name of the card\n * @property {string} cardDescription - Detailed description of the card's functionality\n */\nexport const CARD_INFO = {\n  cardType: 'pool-monitor-card',\n  cardName: 'Pool Monitor Card',\n  cardDescription:\n    'The \"Pool Monitor Card\" is a home assistant plugin that provides information about the temperature, pH, and ORP levels of your swimming pool',\n};\n\n// Import supported sensors list from config\nexport { SUPPORTED_SENSORS } from './configs/config.js';\n\n/** \n * @const {Object} CONSOLE_STYLE - Styling configuration for console output\n * @property {string} title - CSS styling for the title in console\n * @property {string} version - CSS styling for the version in console\n */\nexport const CONSOLE_STYLE = {\n  title: 'color: white; background: green; font-weight: 700;',\n  version: 'color: green; background: white; font-weight: 700;',\n};\n","/**\n * @fileoverview Styles definition for the Pool Monitor Card\n * @description This file contains all CSS styles used in the Pool Monitor Card component.\n * The styles are defined using LitElement's CSS template literals and use Home Assistant's CSS variables\n * for consistent theming across the application.\n */\n\nvar LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\nvar css = LitElement.prototype.css;\n\n/**\n * @const {CSSResult} styles - CSS styles for the Pool Monitor Card\n * @description Defines all visual styles for the card including:\n * - Card layout and appearance\n * - Section layouts (normal and compact modes)\n * - Title styling\n * - Container layouts and positioning\n * - Marker and indicator styles\n * - Gradient and color transitions\n * - Responsive design adjustments\n * \n * Uses Home Assistant CSS variables for theming:\n * - --ha-card-background\n * - --ha-card-border-radius\n * - --ha-card-border-width\n * - --ha-card-box-shadow\n * - --primary-text-color\n */\nexport const styles = css`\n  /** Host element styles */\n  :host {\n    background: var(--ha-card-background, var(--card-background-color, white));\n    border-radius: var(--ha-card-border-radius, 12px);\n    border-width: var(--ha-card-border-width, 4px);\n    box-shadow: var(--ha-card-box-shadow);\n    color: var(--primary-text-color);\n    display: block;\n    transition: all 0.3s ease-out 0s;\n    position: relative;\n    padding-top: 25px;\n  }\n\n  /** Section layouts */\n  .section {\n    padding-bottom: 10px;\n    padding: 0px;\n  }\n\n  .section-compact {\n    padding-bottom: 5px;\n    padding: 0px;\n  }\n\n  /** Title styles */\n  .pool-monitor-title {\n    font-size: 1.5rem;\n    font-weight: 500;\n    padding-left: 15px;\n    padding-bottom: 15px;\n    margin: 0;\n  }\n\n  /** Entity image container */\n  .pool-monitor-entity-img {\n    text-align: right;\n    width: 10%;\n    float: left;\n  }\n\n  /** Main container layouts */\n  .pool-monitor-container {\n    display: grid;\n    padding: 5px;\n    height: 15px;\n  }\n\n  .pool-monitor-container-values {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    padding-top: 0px;\n    padding-left: 20px;\n    margin-top: -10px;\n  }\n\n  .pool-monitor-container-marker {\n    display: grid;\n    grid-template-columns: 10% repeat(6, 1fr) 5%;\n    padding: 10px;\n    grid-template-rows: 15px;\n    line-height: 15px;\n    position: relative;\n  }\n\n  .grid-container {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    padding: 0;\n    grid-template-rows: 15px;\n    line-height: 15px;\n    position: relative;\n    margin: 0px;\n  }\n\n  .pool-monitor-container-marker .marker {\n    text-align: center;\n    justify-self: center;\n    width: 80px;\n    height: 20px;\n    padding-top: 5px;\n    border-radius: 5px;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .pool-monitor-container-marker .marker-state {\n    width: 60px;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .pool-monitor-container-marker .triangle {\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    position: absolute;\n    bottom: 0px;\n    transform: translateX(-50%);\n  }\n\n  .grid-item {\n    padding: 7px 0;\n    margin: 0;\n  }\n\n  .grid-item-text-box {\n    font-size: 0.8em;\n    text-align: center;\n    font-weight: 700;\n  }\n\n  .item-row {\n    grid-row: 1;\n  }\n\n  .cursor {\n    text-align: center;\n    justify-self: center;\n    font-size: 13px;\n    font-weight: 600;\n    color: black;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .cursor-text {\n    position: absolute;\n    width: 200px;\n    height: 17px;\n    padding-left: 3px;\n    padding-right: 3px;\n    padding-top: 0px;\n    margin-top: -1px;\n    font-size: 11px;\n    font-weight: 500;\n    text-align: right;\n    color: black;\n    justify-self: right;\n    z-index: 1;\n  }\n\n  .progress-bar-child {\n    height: 100%;\n    width: 100%;\n    border-radius: 5px;\n  }\n\n  .sensor-monitor-container {\n    position: relative;\n    height: 20px;\n    margin: 0px 0px 0px 0px;\n    border-radius: 5px;\n    overflow: hidden;\n  }\n\n  .warning-message {\n    background-color: var(--warning-color, rgba(255, 152, 0, 0.1));\n    border-left: 4px solid var(--warning-color, #ff9800);\n    border-radius: 4px;\n    padding: 12px 16px;\n    margin: 8px 0;\n    color: var(--warning-text-color, var(--primary-text-color));\n    font-size: 0.95em;\n    line-height: 1.4;\n    display: flex;\n    align-items: center;\n    animation: fadeIn 0.3s ease-in-out;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  .warning-message ha-icon {\n    color: var(--warning-color, #ff9800);\n    margin-right: 12px;\n    flex-shrink: 0;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n","var LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\nvar html = LitElement.prototype.html;\n\n/**\n * @class cardContent\n * @description Class responsible for generating the HTML content of the pool monitor card\n */\nexport class cardContent {\n  /**\n   * @static\n   * @method generateTitle\n   * @description Generates the title section of the card\n   * @param {Object} config - The card configuration\n   * @param {string} [config.title] - Optional title to display\n   * @returns {TemplateResult} The rendered title HTML\n   */\n  static generateTitle(config) {\n    const title =\n      config.title !== undefined\n        ? html` <h1 class=\"pool-monitor-title\">${config.title}</h1> `\n        : html``;\n\n    return html`${title}`;\n  }\n\n  /**\n   * @static\n   * @method generateBody\n   * @description Generates the main body content of the card\n   * @param {Object} config - The card configuration\n   * @param {Object} data - The sensor data to display\n   * @param {string} data.name - Sensor name\n   * @param {string} data.entity - Entity ID\n   * @param {string} data.color - Color for the marker\n   * @param {number} data.pct_marker - Percentage position for the marker\n   * @param {string} data.value - Current sensor value\n   * @param {string} data.unit - Unit of measurement\n   * @param {string} data.state - Current state text\n   * @param {string} data.side_align - Alignment direction\n   * @param {number} data.pct_state_step - Percentage position for state\n   * @param {boolean} data.hide_icon - Whether to hide the icon\n   * @param {boolean} data.is_mdi - Whether the icon is an MDI icon\n   * @param {string} [data.mdi_icon] - MDI icon name if is_mdi is true\n   * @param {string} [data.img_src] - Image source if is_mdi is false\n   * @returns {TemplateResult} The rendered body HTML\n   */\n  static generateBody(config, data) {\n    return html`\n      <!-- ##### ${data.name} section ##### -->\n      <div class=\"section\" @click=${() => this._moreinfo(data.entity)}>\n        <div class=\"pool-monitor-container-marker\">\n          <div\n            class=\"marker\"\n            style=\"background-color: ${data.color} ;color: black;left: ${data.pct_marker}%;\"\n          >\n            ${data.value} ${data.unit}\n          </div>\n          <div\n            class=\"marker-state\"\n            style=\"font-size: 0.8em; padding-top: 5px;color:${data.color};width: 200px;padding-${data.side_align}:40px;text-align:${data.side_align};background-color:transparent ;${data.side_align}: ${data.pct_state_step}%;\"\n          >\n            ${data.state}\n          </div>\n          <div\n            class=\"triangle\"\n            style=\"border-top: 10px solid ${data.color} ;left: ${data.pct - 1}%;\"\n          ></div>\n        </div>\n        ${!data.hide_icon\n          ? html`\n              <div class=\"pool-monitor-entity-img\">\n                ${data.is_mdi\n                  ? html`\n                      <ha-icon icon=\"${data.mdi_icon}\" style=\"width: 32px; height: 32px;\"></ha-icon>\n                    `\n                  : html` <img src=\"${data.img_src}\" style=\"width: 32px; height: 32px;\" /> `}\n              </div>\n            `\n          : ''}\n        <div class=\"pool-monitor-container\">\n          ${config.display.gradient\n            ? html`\n                <div\n                  class=\"progress-bar-child\"\n                  style=\"background: linear-gradient(to right, \n              ${data.mode === 'heatflow'\n                    ? `${config.colors.cool} 15%, \n                 ${config.colors.low} 50%, \n                 ${config.colors.warn} 85%`\n                    : `${config.colors.warn} 5%, \n                 ${config.colors.low} 30%, \n                 ${config.colors.normal}, \n                 ${config.colors.normal}, \n                 ${config.colors.low} 70%, \n                 ${config.colors.warn} 95%`}\n            );\"\n                ></div>\n              `\n            : html`\n                <div class=\"grid-container\">\n                  <div\n                    style=\"background-color: ${config.colors\n                      .warn}; grid-column: 1; border-radius: 5px 0px 0px 5px\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.low}; grid-column: 2;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.normal}; grid-column: 3;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.normal}; grid-column: 4;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.low}; grid-column: 5;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors\n                      .warn}; grid-column: 6; border-radius: 0px 5px 5px 0px;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                </div>\n                <div\n                  style=\"display: flex; justify-content: space-between; margin: 0 10px; font-size: 0.7em; color: var(--secondary-text-color);\"\n                >\n                  <span>${data.min}</span>\n                  <span>${data.max}</span>\n                </div>\n              `}\n          ${data.pct_min !== data.pct_cursor\n            ? html`<div\n                class=\"cursor-text\"\n                style=\"border-left: 2px solid ${config.colors\n                  .hi_low}; border-top: 2px solid ${config.colors\n                  .hi_low}; border-bottom: 2px solid ${config.colors\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_min}%;\"\n              ></div>`\n            : ''}\n          ${data.pct_max !== data.pct_cursor\n            ? html`<div\n                class=\"cursor-text\"\n                style=\"border-right: 2px solid ${config.colors\n                  .hi_low}; border-top: 2px solid ${config.colors\n                  .hi_low}; border-bottom: 2px solid ${config.colors\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_max}%;\"\n              ></div>`\n            : ''}\n        </div>\n        <div class=\"pool-monitor-container-values\">\n          <div\n            style=\"background-color: transparent; grid-column: 1 ; border-radius: 5px 0px 0px 5px\"\n            class=\"grid-item item-row\"\n          >\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[0]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 2 ;\" class=\"grid-item item-row\">\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[1]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 3 ;\" class=\"grid-item item-row\">\n            <div\n              style=\"font-size: 0.8em;color:${config.colors\n                .normal};text-align:right;margin:-5px 2px 0 0 \"\n            >\n              ${data.setpoint_class[2]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 4 ;\" class=\"grid-item item-row\">\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[3]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 5 ;\" class=\"grid-item item-row\">\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[4]}\n            </div>\n          </div>\n          <div\n            style=\"background-color: transparent; grid-column: 6 ; border-radius: 0px 5px 5px 0px;\"\n            class=\"grid-item item-row\"\n          ></div>\n        </div>\n      </div>\n      <div style=\"text-align:left;padding-left:15px;\">\n        ${data.title}<br /><small style=\"position: relative;top:-5px;font-size:9px;color:lightgrey\"\n          >${data.last_updated}</small\n        >\n      </div>\n    `;\n  }\n\n  /**\n   * @static\n   * @method generateCompactBody\n   * @description Generates the compact body content of the card\n   * @param {Object} config - The card configuration\n   * @param {Object} data - The sensor data to display\n   * @param {string} data.name - Sensor name\n   * @param {string} data.entity - Entity ID\n   * @param {string} data.color - Color for the marker\n   * @param {number} data.pct_marker - Percentage position for the marker\n   * @param {string} data.value - Current sensor value\n   * @param {string} data.unit - Unit of measurement\n   * @param {string} data.state - Current state text\n   * @param {string} data.side_align - Alignment direction\n   * @param {number} data.pct_state_step - Percentage position for state\n   * @param {boolean} data.hide_icon - Whether to hide the icon\n   * @param {boolean} data.is_mdi - Whether the icon is an MDI icon\n   * @param {string} [data.mdi_icon] - MDI icon name if is_mdi is true\n   * @param {string} [data.img_src] - Image source if is_mdi is false\n   * @returns {TemplateResult} The rendered compact body HTML\n   */\n  static generateCompactBody(config, data) {\n    return html`\n      <!-- ##### ${data.name} section ##### -->\n      <div class=\"section-compact\" @click=${() => this._moreinfo(data.entity)}>\n        ${!data.hide_icon\n          ? html`\n              <div class=\"pool-monitor-entity-img\">\n                ${data.is_mdi\n                  ? html`\n                      <ha-icon icon=\"${data.mdi_icon}\" style=\"width: 24px; height: 24px;\"></ha-icon>\n                    `\n                  : html` <img src=\"${data.img_src}\" style=\"width: 24px; height: 24px;\" /> `}\n              </div>\n            `\n          : ''}\n        <div class=\"pool-monitor-container\">\n          ${config.display.gradient\n            ? html`\n                <div\n                  class=\"progress-bar-child\"\n                  style=\"background: linear-gradient(to right, \n              ${data.mode === 'heatflow'\n                    ? `${config.colors.cool} 15%, \n                 ${config.colors.low} 50%, \n                 ${config.colors.warn} 85%`\n                    : `${config.colors.warn} 5%, \n                 ${config.colors.low} 30%, \n                 ${config.colors.normal}, \n                 ${config.colors.normal}, \n                 ${config.colors.low} 70%, \n                 ${config.colors.warn} 95%`}\n            );\"\n                ></div>\n              `\n            : html`\n                <div class=\"grid-container\">\n                  <!-- <div style=\"background-color: transparent; grid-column: 1 ; border: 0px; box-shadow:none\" class=\"grid-item item-row\"> <div style=\"font-size: 0.8em;color:lightgrey;text-align:left;margin:3px 2px 0 0 \">${data.unit}</div></div> -->\n                  <div\n                    style=\"background-color: ${config.colors\n                      .warn}; grid-column: 1; border-radius: 5px 0px 0px 5px\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.low}; grid-column: 2;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.normal}; grid-column: 3;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.normal}; grid-column: 4;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors.low}; grid-column: 5;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                  <div\n                    style=\"background-color: ${config.colors\n                      .warn}; grid-column: 6; border-radius: 0px 5px 5px 0px;\"\n                    class=\"grid-item item-row\"\n                  ></div>\n                </div>\n                <div\n                  style=\"display: flex; justify-content: space-between; margin: 0 10px; font-size: 0.7em; color: var(--secondary-text-color);\"\n                >\n                  <span>${data.min}</span>\n                  <span>${data.max}</span>\n                </div>\n              `}\n          <div\n            class=\"cursor-text\"\n            style=\"border-${data.side_align}: 5px solid ${config.marker}; text-align:${data.side_align};background-color:transparent ;${data.side_align}: ${data.pct_cursor}%;\"\n          >\n            &nbsp; ${data.title} ${data.value} ${data.unit} ${data.separator} ${data.state} &nbsp;\n          </div>\n          ${data.pct_min !== data.pct_cursor\n            ? html`<div\n                class=\"cursor-text\"\n                style=\"border-left: 2px solid ${config.colors\n                  .hi_low}; border-top: 2px solid ${config.colors\n                  .hi_low}; border-bottom: 2px solid ${config.colors\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_min}%;\"\n              ></div>`\n            : ''}\n          ${data.pct_max !== data.pct_cursor\n            ? html`<div\n                class=\"cursor-text\"\n                style=\"border-right: 2px solid ${config.colors\n                  .hi_low}; border-top: 2px solid ${config.colors\n                  .hi_low}; border-bottom: 2px solid ${config.colors\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_max}%;\"\n              ></div>`\n            : ''}\n        </div>\n        <div class=\"pool-monitor-container-values\">\n          <div\n            style=\"background-color: transparent; grid-column: 1 ; border-radius: 5px 0px 0px 5px\"\n            class=\"grid-item item-row\"\n          >\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[0]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 2 ;\" class=\"grid-item item-row\">\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[1]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 3 ;\" class=\"grid-item item-row\">\n            <div\n              style=\"font-size: 0.8em;color:${config.colors\n                .normal};text-align:right;margin:-5px 2px 0 0 \"\n            >\n              ${data.setpoint_class[2]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 4 ;\" class=\"grid-item item-row\">\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[3]}\n            </div>\n          </div>\n          <div style=\"background-color: transparent; grid-column: 5 ;\" class=\"grid-item item-row\">\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\n              ${data.setpoint_class[4]}\n            </div>\n          </div>\n          <div\n            style=\"background-color: transparent; grid-column: 6 ; border-radius: 0px 5px 5px 0px;\"\n            class=\"grid-item item-row\"\n          ></div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * @static\n   * @method _moreinfo\n   * @description Dispatches a more-info event for the given entity\n   * @param {string} entity - Entity ID\n   */\n  static _moreinfo(entity) {\n    const event = new Event('hass-more-info', {\n      bubbles: true,\n      composed: true,\n    });\n    event.detail = { entityId: entity };\n    document.querySelector('home-assistant').dispatchEvent(event);\n  }\n}\n","var LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\nvar html = LitElement.prototype.html;\n\nimport { getTranslation, formatTranslation } from './locales/translations.js';\nimport { CARD_VERSION, CARD_INFO, CONSOLE_STYLE, SUPPORTED_SENSORS } from './constants.js';\nimport { styles } from './styles/styles.js';\nimport { cardContent } from './components/card-content.js';\nimport { getSensorConfig, getDisplayConfig, getColorConfig } from './configs/config.js';\n\nconsole.info(\n  `%c POOL-MONITORING-CARD %c ${CARD_VERSION} `,\n  CONSOLE_STYLE.title,\n  CONSOLE_STYLE.version,\n);\n\n/**\n * @class PoolMonitorCard\n * @extends {LitElement}\n * @description Custom Home Assistant card for monitoring pool sensors and displaying pool-related information\n * @property {Object} hass - Home Assistant instance\n * @property {Object} config - Card configuration\n * @version ${CARD_VERSION}\n */\nclass PoolMonitorCard extends LitElement {\n  static cardType = CARD_INFO.cardType;\n  static cardName = CARD_INFO.cardName;\n  static cardDescription = CARD_INFO.cardDescription;\n\n  /**\n   * @static\n   * @returns {Object} Properties definition for the card\n   */\n  static get properties() {\n    return {\n      hass: {},\n      config: {},\n    };\n  }\n\n  static styles = styles;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * @method render\n   * @description Renders the pool monitor card content\n   * @returns {TemplateResult} The rendered HTML template\n   */\n  render() {\n    const config = this.getConfig();\n    const data = this.processData();\n    const generateContent = config.display.compact\n      ? cardContent.generateCompactBody\n      : cardContent.generateBody;\n\n    // Vérifier si nous avons des données valides\n    if (!data || Object.keys(data).length === 0) {\n      return html` <div id=\"pool-monitor-card\">\n        <div class=\"warning-message\">\n          <ha-icon icon=\"mdi:alert\"></ha-icon>\n          <span>No valid sensor data available</span>\n        </div>\n      </div>`;\n    }\n\n    return html` <div id=\"pool-monitor-card\">\n      ${cardContent.generateTitle(config)}\n      ${Object.values(data).map(sensorData => {\n        if (sensorData?.invalid) {\n          return html`\n            <div class=\"warning-message\">\n              <ha-icon icon=\"mdi:alert\"></ha-icon>\n              <span\n                >Sensor ${sensorData?.name || 'unknown'} is not supported. Please verify its\n                configuration and ensure it is compatible with the card.</span\n              >\n            </div>\n          `;\n        } else if (sensorData?.value === null) {\n          return html`\n            <div class=\"warning-message\">\n              <ha-icon icon=\"mdi:alert\"></ha-icon>\n              <span\n                >Entity ${sensorData?.entity || 'unknown'} could not be found. Please verify its\n                name and ensure the entity is properly configured.</span\n              >\n            </div>\n          `;\n        }\n        return generateContent(config, sensorData);\n      })}\n    </div>`;\n  }\n\n  /**\n   * @method processData\n   * @description Processes the sensor data for the card\n   * @returns {Object} The processed sensor data\n   */\n  processData() {\n    const data = {};\n    const config = this.getConfig();\n\n    Object.entries(config.sensors).forEach(([sensorType, sensorConfigs]) => {\n      // Convertir en tableau si ce n'est pas déjà le cas (rétrocompatibilité)\n      const sensorArray = Array.isArray(sensorConfigs) ? sensorConfigs : [sensorConfigs];\n\n      sensorArray.forEach((sensor, index) => {\n        const sensorKey = `${sensorType}_${index + 1}`;\n\n        data[sensorKey] = this.calculateData(\n          sensorType,\n          sensor.title || this.getTranslatedText('sensor.' + sensorType),\n          sensor.entity,\n          sensor.min,\n          sensor.max,\n          sensor.setpoint,\n          sensor.step,\n          sensor.unit,\n          sensor.icon,\n          sensor.image_url,\n          sensor.mode,\n          sensor.min_limit,\n          sensor.override_value,\n          sensor.override,\n          sensor.invalid,\n        );\n      });\n    });\n\n    return data;\n  }\n\n  /**\n   * @method getTranslatedText\n   * @description Retrieves a translated text based on the provided key and values\n   * @param {string} key - The translation key\n   * @param {Object} values - The values to replace in the translation\n   * @returns {string} The translated text\n   */\n  getTranslatedText(key, values) {\n    const lang = this.config?.display.language || 'en';\n    const translation = getTranslation(lang, key);\n    return formatTranslation(translation, values);\n  }\n\n  /**\n   * @method calculateData\n   * @description Calculates the data for a single sensor\n   * @param {string} name - The sensor name\n   * @param {string} title - The sensor title\n   * @param {string} entity - The sensor entity\n   * @param {number} entity_min - The minimum entity value\n   * @param {number} entity_max - The maximum entity value\n   * @param {number} setpoint - The setpoint value\n   * @param {number} setpoint_step - The setpoint step value\n   * @param {string} unit - The unit of measurement\n   * @param {string} icon - The icon to display\n   * @param {string} image_url - The image URL to display\n   * @param {string} mode - The mode of the sensor\n   * @param {number} min_limit - The minimum limit value\n   * @param {number} override_value - The override value\n   * @param {boolean} override - Whether to override the value\n   * @param {boolean} invalid - Whether the sensor is invalid\n   * @returns {Object} The calculated sensor data\n   */\n  calculateData(\n    name,\n    title,\n    entity,\n    entity_min,\n    entity_max,\n    setpoint,\n    setpoint_step,\n    unit,\n    icon,\n    image_url,\n    mode,\n    min_limit,\n    override_value,\n    override,\n    invalid,\n  ) {\n    const newData = {};\n    const config = this.getConfig();\n    const defaultConfig = getSensorConfig(name) || {};\n\n    newData.name = name;\n    newData.invalid = invalid;\n    newData.mode = mode;\n\n    newData.title = config.display.show_names ? title : html`&nbsp;`;\n\n    // Gestion des icônes et images pour chaque capteur\n    if (!config.display.show_icons) {\n      newData.hide_icon = true;\n    } else {\n      const sensorIcon = icon || '';\n      const sensorImage = image_url || '';\n\n      if (sensorIcon === 'hide') {\n        newData.hide_icon = true;\n      } else if (sensorImage) {\n        newData.is_mdi = false;\n        newData.img_src = sensorImage;\n      } else if (sensorIcon && typeof sensorIcon === 'string' && sensorIcon.startsWith('mdi:')) {\n        newData.is_mdi = true;\n        newData.mdi_icon = sensorIcon;\n      } else {\n        newData.img_src = `https://raw.githubusercontent.com/wilsto/pool-monitor-card/master/resources/${name}.png`;\n      }\n    }\n\n    // Vérifier si l'entité existe\n    if (!this.hass || !this.hass.states || !this.hass.states[entity]) {\n      console.warn(`Entity not found: ${entity}`);\n      newData.value = null;\n      newData.entity = entity;\n      return newData;\n    }\n\n    newData.value = parseFloat(this.hass.states[entity].state);\n    newData.entity = entity;\n\n    if (config.display.show_last_updated) {\n      newData.last_updated = this.timeFromNow(this.hass.states[entity].last_updated);\n    }\n\n    // Utiliser l'unité de la configuration par défaut si non spécifiée\n    newData.unit = config.display.show_units ? unit || defaultConfig.unit || '' : '';\n\n    if (override) {\n      newData.value = override_value || defaultConfig.override;\n    }\n\n    // Vérifier les entités min/max\n    newData.min_value =\n      entity_min !== undefined &&\n      this.hass.states[entity_min] &&\n      !isNaN(parseFloat(this.hass.states[entity_min].state))\n        ? parseFloat(this.hass.states[entity_min].state)\n        : newData.value;\n\n    newData.max_value =\n      entity_max !== undefined &&\n      this.hass.states[entity_max] &&\n      !isNaN(parseFloat(this.hass.states[entity_max].state))\n        ? parseFloat(this.hass.states[entity_max].state)\n        : newData.value;\n\n    // Utiliser les valeurs par défaut de la configuration si non spécifiées\n    setpoint =\n      setpoint !== undefined\n        ? parseFloat(setpoint)\n        : defaultConfig.setpoint !== undefined\n          ? parseFloat(defaultConfig.setpoint)\n          : newData.value;\n    setpoint_step =\n      setpoint_step !== undefined\n        ? parseFloat(setpoint_step)\n        : defaultConfig.step !== undefined\n          ? parseFloat(defaultConfig.step)\n          : 0.1;\n\n    const countDecimals = Math.max(this.countDecimals(setpoint), this.countDecimals(setpoint_step));\n\n    if (newData.value) {\n      newData.value = parseFloat(this.hass.states[entity].state);\n    }\n\n    newData.setpoint = setpoint;\n\n    // Calculate setpoint classes with min_limit consideration\n    const minLimit = min_limit !== undefined ? Number(min_limit) : -Infinity;\n    const sp_minus_2 = Math.max(minLimit, setpoint - 2 * setpoint_step);\n    const sp_minus_1 = Math.max(minLimit, setpoint - setpoint_step);\n    const sp = Math.max(minLimit, setpoint);\n    const sp_plus_1 = Math.max(minLimit, setpoint + setpoint_step);\n    const sp_plus_2 = Math.max(minLimit, setpoint + 2 * setpoint_step);\n\n    newData.setpoint_class = [\n      sp_minus_2.toFixed(countDecimals),\n      sp_minus_1.toFixed(countDecimals),\n      sp.toFixed(countDecimals),\n      sp_plus_1.toFixed(countDecimals),\n      sp_plus_2.toFixed(countDecimals),\n    ];\n\n    newData.separator = config.display.show_labels ? '-' : '';\n    newData.color = 'transparent';\n\n    // Ensure value respects min_limit\n    if (newData.value !== null) {\n      newData.value = Math.max(minLimit, newData.value);\n    }\n\n    if (mode === 'heatflow') {\n      // Three-level gradient for heatflow mode\n      if (Number(newData.value) < Number(newData.setpoint_class[1])) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.1') : '';\n        newData.color = config.colors.cool;\n      } else if (\n        Number(newData.value) >= Number(newData.setpoint_class[1]) &&\n        Number(newData.value) < Number(newData.setpoint_class[3])\n      ) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.3') : '';\n        newData.color = config.colors.low;\n      } else {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.5') : '';\n        newData.color = config.colors.warn;\n      }\n    } else {\n      // Six-level gradient for default mode\n      if (Number(newData.value) < Number(newData.setpoint_class[0])) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.1') : '';\n        newData.color = config.colors.warn;\n      } else if (\n        Number(newData.value) >= Number(newData.setpoint_class[0]) &&\n        Number(newData.value) < Number(newData.setpoint_class[1])\n      ) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.2') : '';\n        newData.color = config.colors.low;\n      } else if (\n        Number(newData.value) >= Number(newData.setpoint_class[1]) &&\n        Number(newData.value) < Number(newData.setpoint_class[2])\n      ) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.3') : '';\n        newData.color = config.colors.normal;\n      } else if (\n        Number(newData.value) >= Number(newData.setpoint_class[2]) &&\n        Number(newData.value) < Number(newData.setpoint_class[3])\n      ) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.4') : '';\n        newData.color = config.colors.normal;\n      } else if (\n        Number(newData.value) >= Number(newData.setpoint_class[3]) &&\n        Number(newData.value) < Number(newData.setpoint_class[4])\n      ) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.5') : '';\n        newData.color = config.colors.low;\n      } else if (Number(newData.value) >= Number(newData.setpoint_class[4])) {\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.6') : '';\n        newData.color = config.colors.warn;\n      }\n    }\n    newData.progressClass = name === 'temperature' ? 'progress-temp' : 'progress';\n\n    newData.pct = Math.max(\n      0,\n      Math.min(\n        98.5,\n        (Math.max(0, newData.value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) *\n          0.85 *\n          100 +\n          15,\n      ),\n    ).toFixed(0);\n    newData.pct_min = Math.max(\n      0,\n      Math.min(\n        98.5,\n        (Math.max(0, newData.min_value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) *\n          0.85 *\n          100 +\n          15,\n      ),\n    ).toFixed(0);\n    newData.pct_max = Math.max(\n      0,\n      Math.min(\n        98.5,\n        (Math.max(0, newData.max_value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) *\n          0.85 *\n          100 +\n          15,\n      ),\n    ).toFixed(0);\n    newData.pct_marker = newData.value > newData.setpoint ? newData.pct - 12 : newData.pct - 5;\n    newData.side_align = newData.value > setpoint ? 'right' : 'left';\n    newData.pct_cursor =\n      newData.value > setpoint ? 100 - parseFloat(newData.pct) : parseFloat(newData.pct) - 2;\n    newData.pct_state_step =\n      newData.value > setpoint ? 105 - parseFloat(newData.pct) : parseFloat(newData.pct) + 5;\n    newData.pct_min =\n      newData.value > setpoint\n        ? 100 - parseFloat(newData.pct_min)\n        : parseFloat(newData.pct_min) - 2;\n    newData.pct_max =\n      newData.value > setpoint\n        ? 100 - parseFloat(newData.pct_max)\n        : parseFloat(newData.pct_max) - 2;\n\n    return newData;\n  }\n\n  /**\n   * @method countDecimals\n   * @description Counts the number of decimal places in a number\n   * @param {number} number - The number to analyze\n   * @returns {number} The number of decimal places (0 if integer or invalid)\n   */\n  countDecimals(number) {\n    if (number === undefined || number === null) {\n      return 0;\n    }\n    if (Math.floor(number) === number) {\n      // si c'est un nombre entier\n      return 0;\n    }\n    const str = number.toString();\n    if (str.includes('.')) {\n      return str.split('.')[1].length || 0;\n    }\n    return 0;\n  }\n\n  /**\n   * @method timeFromNow\n   * @description Calculates the time from now for a given date\n   * @param {string} dateTime - The date and time to calculate from\n   * @returns {string} The time from now\n   */\n  timeFromNow(dateTime) {\n    const date = new Date(dateTime);\n    const diff = Date.now() - date.getTime();\n\n    const t = (key, n) => {\n      let plural = n == 1 ? '' : 's';\n      let translation = this.getTranslatedText(`time.${key}`);\n      translation = translation.replace('{' + key + '}', n);\n      translation = translation.replace('{plural}', plural);\n      return translation;\n    };\n\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    if (minutes < 1) return t('seconds', 0);\n    if (minutes < 60) return t('minutes', minutes);\n    if (hours < 24) return t('hours', hours);\n    return t('days', days);\n  }\n\n  /**\n   * @method getConfig\n   * @description Retrieves the card configuration\n   * @returns {Object} The card configuration\n   */\n  getConfig() {\n    return this.config;\n  }\n\n  /**\n   * @method setConfig\n   * @description Sets the card configuration\n   * @param {Object} config - The new card configuration\n   */\n  setConfig(config) {\n    // Utiliser la configuration par défaut de config.js\n    const defaultConfig = {\n      display: getDisplayConfig(),\n      colors: getColorConfig(),\n    };\n\n    // Merge avec la configuration utilisateur\n    const newConfig = {\n      ...config,\n      display: {\n        ...defaultConfig.display,\n        ...(config.display || {}),\n      },\n      colors: {\n        ...defaultConfig.colors,\n        ...(config.colors || {}),\n      },\n      // Créer une copie profonde de la configuration des sensors\n      sensors: {},\n    };\n\n    if (!config.sensors) {\n      console.warn(`Legacy configuration detected, please move sensors under \"sensors\" key`, {\n        config,\n      });\n      throw new Error(\n        'Legacy configuration detected. Please update your setup to define all sensors under the \"sensors\" key as required by the version 2.0 of the card.',\n      );\n    }\n\n    // Validation et transformation des capteurs\n    Object.entries(config.sensors).forEach(([sensorType, sensorConfig]) => {\n      // Obtenir la configuration par défaut pour ce type de capteur\n      const defaultSensorConfig = getSensorConfig(sensorType);\n\n      // Convertir en tableau si ce n'est pas déjà le cas (rétrocompatibilité)\n      const sensorArray = Array.isArray(sensorConfig) ? [...sensorConfig] : [{ ...sensorConfig }];\n\n      if (sensorArray.length === 0) {\n        throw new Error(`Empty sensor array for ${sensorType}`);\n      }\n\n      // Fusionner les valeurs par défaut pour chaque capteur du tableau\n      const mergedSensorArray = sensorArray.map(sensor => ({\n        ...defaultSensorConfig, // Valeurs par défaut\n        ...sensor, // Configuration utilisateur (écrase les valeurs par défaut)\n        nameDefinedByUser: !!sensor.name, // Ajoute un boolean si name défini par l'utilisateur\n      }));\n\n      mergedSensorArray.forEach((sensor, index) => {\n        if (!sensor.entity) {\n          throw new Error(`Missing entity for ${sensorType}[${index}]`);\n        }\n\n        // Si un nom est configuré, l'ajouter au titre\n        if (sensor.nameDefinedByUser) {\n          sensor.title = sensor.name;\n        }\n\n        // Vérifier si le sensor est supporté\n        if (!SUPPORTED_SENSORS.includes(sensorType)) {\n          console.warn(`Unsupported sensor type: ${sensorType}`, {\n            sensorType,\n            supportedSensors: SUPPORTED_SENSORS,\n            config: config,\n            sensorConfig: sensor,\n          });\n          sensor.invalid = true;\n        } else {\n          sensor.invalid = false;\n        }\n      });\n\n      // Stocker le tableau de capteurs fusionnés dans le nouvel objet\n      newConfig.sensors[sensorType] = mergedSensorArray;\n    });\n\n    this.config = newConfig;\n  }\n\n  /**\n   * @method _moreinfo\n   * @description Opens the more info popup for an entity\n   * @param {string} entityinfo - The entity to open the more info popup for\n   */\n  static _moreinfo(entityinfo) {\n    const popupEvent = new Event('hass-more-info', {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n    });\n    popupEvent.detail = { entityId: entityinfo };\n    document.querySelector('home-assistant').dispatchEvent(popupEvent);\n  }\n}\n\ncustomElements.define('pool-monitor-card', PoolMonitorCard);\n"],"names":["en","state","sensor","temperature","temperature_2","ph","orp","tds","salinity","cya","calcium","phosphate","alkalinity","free_chlorine","total_chlorine","pressure","sg","magnesium","water_level","flow_rate","uv_radiation","product_volume","product_weight","electrical_conductivity","time","seconds","minutes","hours","days","fr","es","de","it","nl","pt","ptBR","ro","sk","he","ru","translations","getTranslation","lang","key","keys","split","result","k","formatTranslation","translation","values","Object","entries","reduce","acc","value","replace","DEFAULT_CONFIG","display","compact","show_names","show_labels","show_last_updated","show_icons","show_units","gradient","language","colors","low","warn","normal","cool","marker","hi_low","sensors","name","unit","setpoint","step","mode","min_limit","ec","specific_gravity","getSensorConfig","type","getDisplayConfig","getColorConfig","SUPPORTED_SENSORS","VERSION","BUILD_TIMESTAMP","CARD_VERSION","CARD_INFO","cardType","cardName","cardDescription","CONSOLE_STYLE","title","version","LitElement","getPrototypeOf","customElements","get","css","prototype","styles","html","cardContent","generateTitle","config","undefined","generateBody","data","this","_moreinfo","entity","color","pct_marker","side_align","pct_state_step","pct","hide_icon","is_mdi","mdi_icon","img_src","min","max","pct_min","pct_cursor","pct_max","setpoint_class","last_updated","generateCompactBody","separator","event","Event","bubbles","composed","detail","entityId","document","querySelector","dispatchEvent","console","info","PoolMonitorCard","static","properties","hass","constructor","super","render","getConfig","processData","generateContent","length","map","sensorData","invalid","forEach","sensorType","sensorConfigs","sensorArray","Array","isArray","index","sensorKey","calculateData","getTranslatedText","icon","image_url","override_value","override","entity_min","entity_max","setpoint_step","newData","defaultConfig","sensorIcon","sensorImage","startsWith","states","parseFloat","timeFromNow","min_value","isNaN","max_value","countDecimals","Math","minLimit","Number","Infinity","sp_minus_2","sp_minus_1","sp","sp_plus_1","sp_plus_2","toFixed","progressClass","number","floor","str","toString","includes","dateTime","date","Date","diff","now","getTime","t","n","plural","setConfig","newConfig","Error","sensorConfig","defaultSensorConfig","mergedSensorArray","nameDefinedByUser","supportedSensors","entityinfo","popupEvent","cancelable","define"],"mappings":"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"}