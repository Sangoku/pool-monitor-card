{"version":3,"file":"pool-monitor-card.js","sources":["../src/locales/en.js","../src/locales/fr.js","../src/locales/es.js","../src/locales/de.js","../src/locales/it.js","../src/locales/nl.js","../src/locales/pt.js","../src/locales/pt-br.js","../src/locales/ro.js","../src/locales/sk.js","../src/locales/he.js","../src/locales/ru.js","../src/locales/translations.js","../src/configs/config.js","../src/constants.js","../src/styles/styles.js","../src/components/card-content.js","../src/pool_monitor_card.js"],"sourcesContent":["/**\r\n * @fileoverview English translations for the Pool Monitor Card\r\n * @description Contains all English language strings used in the card interface\r\n */\r\n\r\n/**\r\n * @const {Object} translations\r\n * @description English translation strings organized by category\r\n * @property {Object} state - Sensor state descriptions\r\n * @property {string} state.1 - Description for very low values\r\n * @property {string} state.2 - Description for low but acceptable values\r\n * @property {string} state.3 - Description for ideal lower range values\r\n * @property {string} state.4 - Description for ideal upper range values\r\n * @property {string} state.5 - Description for high but acceptable values\r\n * @property {string} state.6 - Description for very high values\r\n *\r\n * @property {Object} sensor - Sensor name translations\r\n * @property {string} sensor.temperature - Primary temperature sensor name\r\n * @property {string} sensor.temperature_2 - Secondary temperature sensor name\r\n * @property {string} sensor.ph - pH level sensor name\r\n * @property {string} sensor.orp - ORP (Oxidation Reduction Potential) sensor name\r\n * @property {string} sensor.tds - TDS (Total Dissolved Solids) sensor name\r\n * @property {string} sensor.salinity - Salinity sensor name\r\n * @property {string} sensor.cya - Cyanuric acid sensor name\r\n * @property {string} sensor.calcium - Calcium level sensor name\r\n * @property {string} sensor.phosphate - Phosphate level sensor name\r\n * @property {string} sensor.alkalinity - Alkalinity level sensor name\r\n * @property {string} sensor.free_chlorine - Free chlorine level sensor name\r\n * @property {string} sensor.total_chlorine - Total chlorine level sensor name\r\n * @property {string} sensor.pressure - Filter pressure sensor name\r\n * @property {string} sensor.specific_gravity - Specific gravity sensor name\r\n * @property {string} sensor.magnesium - Magnesium level sensor name\r\n * @property {string} sensor.water_level - Water level sensor name\r\n * @property {string} sensor.flow_rate - Flow rate sensor name\r\n * @property {string} sensor.uv_radiation - UV radiation sensor name\r\n * @property {string} sensor.product_volume - Product volume sensor name\r\n * @property {string} sensor.product_weight - Product weight sensor name\r\n * @property {string} sensor.ec - Electrical Conductivity sensor name\r\n *\r\n * @property {Object} time - Time-related translations\r\n * @property {string} time.seconds - Text for events that just happened\r\n * @property {string} time.minutes - Text format for minutes ago (uses {minutes} and {plural} placeholders)\r\n * @property {string} time.hours - Text format for hours ago (uses {hours} and {plural} placeholders)\r\n * @property {string} time.days - Text format for days ago (uses {days} and {plural} placeholders)\r\n */\r\nexport default {\r\n  state: {\r\n    1: 'Too Low',\r\n    2: 'Acceptable Low',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Acceptable High',\r\n    6: 'Too High',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperature',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinity',\r\n    cya: 'Cyanuric Acid',\r\n    calcium: 'Calcium',\r\n    phosphate: 'Phosphate',\r\n    alkalinity: 'Alkalinity',\r\n    free_chlorine: 'Free Chlorine',\r\n    total_chlorine: 'Total Chlorine',\r\n    pressure: 'Filter Pressure',\r\n    specific_gravity: 'Specific Gravity',\r\n    magnesium: 'Magnesium',\r\n    water_level: 'Water Level',\r\n    flow_rate: 'Flow Rate',\r\n    uv_radiation: 'UV Radiation',\r\n    product_volume: 'Product Volume',\r\n    product_weight: 'Product Weight',\r\n    ec: 'Electrical Conductivity',\r\n  },\r\n  time: {\r\n    seconds: 'just now',\r\n    minutes: '{minutes} minute{plural} ago',\r\n    hours: '{hours} hour{plural} ago',\r\n    days: '{days} day{plural} ago',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Trop bas',\r\n    2: 'Acceptable bas',\r\n    3: 'Idéal',\r\n    4: 'Idéal',\r\n    5: 'Acceptable élevé',\r\n    6: 'Trop élevé',\r\n  },\r\n  sensor: {\r\n    temperature: 'Température',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinité',\r\n    cya: 'Acide cyanurique',\r\n    calcium: 'Calcium',\r\n    phosphate: 'Phosphate',\r\n    alkalinity: 'Alcalinité',\r\n    free_chlorine: 'Chlore libre',\r\n    total_chlorine: 'Chlore total',\r\n    pressure: 'Pression du filtre',\r\n    specific_gravity: 'Densité spécifique',\r\n    magnesium: 'Magnésium',\r\n    water_level: \"Niveau d'eau\",\r\n    flow_rate: 'Débit',\r\n    uv_radiation: 'Radiation UV',\r\n    product_volume: 'Volume Produit',\r\n    product_weight: 'Poids Produit',\r\n    ec: 'Conductivité Électrique',\r\n  },\r\n  time: {\r\n    seconds: 'à l\\'instant',\r\n    minutes: 'il y a {minutes} minute{plural}',\r\n    hours: 'il y a {hours} heure{plural}',\r\n    days: 'il y a {days} jour{plural}',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Demasiado bajo',\r\n    2: 'Aceptable bajo',\r\n    3: 'Perfecto',\r\n    4: 'Perfecto',\r\n    5: 'Aceptable alto',\r\n    6: 'Demasiado alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinidad',\r\n    cya: 'Acido cianúrico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinidad',\r\n    free_chlorine: 'Cloro libre',\r\n    total_chlorine: 'Cloro total',\r\n    pressure: 'Pressione du filter relativa',\r\n    specific_gravity: 'Densidad relativa',\r\n    magnesium: 'Magnesio',\r\n    water_level: 'Nivel de agua',\r\n    flow_rate: 'Caudal',\r\n    uv_radiation: 'Radiación UV',\r\n    product_volume: 'Volumen Producto',\r\n    product_weight: 'Peso Producto',\r\n    ec: 'Conductividad Eléctrica',\r\n  },\r\n  time: {\r\n    seconds: 'justo ahora',\r\n    minutes: 'hace {minutes} minuto{plural}',\r\n    hours: 'hace {hours} hora{plural}',\r\n    days: 'hace {days} día{plural}',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Zu niedrig',\r\n    2: 'Akzeptabler Tiefstwert',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Akzeptabler Hochwert',\r\n    6: 'Zu hoch',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatur',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salzgehalt',\r\n    cya: 'Cyanursäure',\r\n    calcium: 'Kalzium',\r\n    phosphate: 'Phosphat',\r\n    alkalinity: 'Alkalinität',\r\n    free_chlorine: 'Freies Chlor',\r\n    total_chlorine: 'Gesamtchlor',\r\n    pressure: 'Sandfilterdruck',\r\n    specific_gravity: 'Spezifisches Gewicht',\r\n    magnesium: 'Magnesium',\r\n    water_level: 'Wasserstand',\r\n    flow_rate: 'Durchfluss',\r\n    uv_radiation: 'UV-Strahlung',\r\n    product_volume: 'Produktvolumen',\r\n    product_weight: 'Produktgewicht',\r\n    ec: 'Elektrische Leitfähigkeit',\r\n  },\r\n  time: {\r\n    seconds: 'gerade erst',\r\n    minutes: 'vor {minutes} Minute{plural}',\r\n    hours: 'vor {hours} Stunde{plural}',\r\n    days: 'vor {days} Tag{plural}',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Troppo basso',\r\n    2: 'Accettabile basso',\r\n    3: 'Ideale',\r\n    4: 'Ideale',\r\n    5: 'Accettabile alto',\r\n    6: 'Troppo alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinità',\r\n    cya: 'Acido cianurico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinità',\r\n    free_chlorine: 'Cloro libero',\r\n    total_chlorine: 'Cloro totale',\r\n    pressure: 'Pressione filtro',\r\n    specific_gravity: 'Gravità specifica',\r\n    magnesium: 'Magnesio',\r\n    water_level: \"Livello dell'acqua\",\r\n    flow_rate: 'Portata',\r\n    uv_radiation: 'Radiazione UV',\r\n    product_volume: 'Volume prodotto',\r\n    product_weight: 'Peso prodotto',\r\n    ec: 'Conducibilità Elettrica',\r\n  },\r\n  time: {\r\n    seconds: 'proprio ora',\r\n    minutes: '{minutes} minuto{plural} fa',\r\n    hours: '{hours} ora{plural} fa',\r\n    days: '{days} giorno{plural} fa',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Te laag',\r\n    2: 'Acceptabel laag',\r\n    3: 'Ideaal',\r\n    4: 'Ideaal',\r\n    5: 'Acceptabel hoog',\r\n    6: 'Te hoog',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatuur',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Zoutgehalte',\r\n    cya: 'Cyanuurzuur',\r\n    calcium: 'Calcium',\r\n    phosphate: 'Fosfaat',\r\n    alkalinity: 'Alkaliteit',\r\n    free_chlorine: 'Vrij chloor',\r\n    total_chlorine: 'Totaal chloor',\r\n    pressure: 'Filterdruk',\r\n    specific_gravity: 'Soortelijk gewicht',\r\n    magnesium: 'Magnesium',\r\n    water_level: 'Waterniveau',\r\n    flow_rate: 'Debiet',\r\n    uv_radiation: 'UV-straling',\r\n    product_volume: 'Productvolume',\r\n    product_weight: 'Productgewicht',\r\n    ec: 'Elektrische Geleidbaarheid',\r\n  },\r\n  time: {\r\n    seconds: 'zojuist',\r\n    minutes: '{minutes} minuut{plural} geleden',\r\n    hours: '{hours} uur{plural} geleden',\r\n    days: '{days} dag{plural} geleden',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Muito Baixo',\r\n    2: 'Torelavel mas Baixo',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Toleravel mas Alto',\r\n    6: 'Muito Alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinidade',\r\n    cya: 'Ácido cianúrico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinidade',\r\n    free_chlorine: 'Cloro livres',\r\n    total_chlorine: 'Cloro total',\r\n    pressure: 'Pressão do filtro',\r\n    specific_gravity: 'Gravidade específica',\r\n    magnesium: 'Magnésio',\r\n    water_level: 'Nivel de agua',\r\n    flow_rate: 'Caudal',\r\n    uv_radiation: 'Radiação UV',\r\n    product_volume: 'Volume Produto',\r\n    product_weight: 'Peso Produto',\r\n    ec: 'Condutividade Elétrica',\r\n  },\r\n  time: {\r\n    seconds: 'Agora',\r\n    minutes: '{minutes} Muntos{plural} atrás',\r\n    hours: '{hours} horas{plural} atrás',\r\n    days: '{days} dias{plural} atrás',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Muito Baixo',\r\n    2: 'Aceitavel Baixo',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Aceitavel Alto',\r\n    6: 'Muito Alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinidade',\r\n    cya: 'Acido Cianurico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinidade',\r\n    free_chlorine: 'Cloro Livre',\r\n    total_chlorine: 'Cloro Total',\r\n    pressure: 'Pressão no Filtro',\r\n    specific_gravity: 'Gravidade específica',\r\n    magnesium: 'Magnésio',\r\n    water_level: 'Nivel de agua',\r\n    flow_rate: 'Caudal',\r\n    uv_radiation: 'Radiação UV',\r\n    product_volume: 'Volume Produto',\r\n    product_weight: 'Peso Produto',\r\n    ec: 'Condutividade Elétrica',\r\n  },\r\n  time: {\r\n    seconds: 'Agora mesmo',\r\n    minutes: '{minutes} minutos{plural} atras',\r\n    hours: '{hours} horas{plural} atras',\r\n    days: '{days} Dias{plural} atras',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Prea mic',\r\n    2: 'Mic',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Mare',\r\n    6: 'Prea mare',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatură',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinitate',\r\n    cya: 'Acid cianuric',\r\n    calcium: 'Calciu',\r\n    phosphate: 'Fosfat',\r\n    alkalinity: 'Alcalinitate',\r\n    free_chlorine: 'Clor liber',\r\n    total_chlorine: 'Clor total',\r\n    pressure: 'Presiune filtru',\r\n    specific_gravity: 'Greutate specifică',\r\n    magnesium: 'Magneziu',\r\n    water_level: 'Nivel apă',\r\n    flow_rate: 'Debit',\r\n    uv_radiation: 'Radiație UV',\r\n    product_volume: 'Volum produs',\r\n    product_weight: 'Greutate produs',\r\n    ec: 'Conductivitate Electrică',\r\n  },\r\n  time: {\r\n    seconds: 'acum',\r\n    minutes: 'acum {minutes} minut{plural}',\r\n    hours: 'acum {hours} oră{plural}',\r\n    days: 'acum {days} zi{plural}',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Príliš nízky',\r\n    2: 'Akceptovateľne nízky',\r\n    3: 'Ideálny',\r\n    4: 'Ideálny',\r\n    5: 'Akceptovateľne vysoký',\r\n    6: 'Príliš vysoký',\r\n  },\r\n  sensor: {\r\n    temperature: 'Teplota',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinita',\r\n    cya: 'Kyselina kyanurová',\r\n    calcium: 'Vápnik',\r\n    phosphate: 'Fosfát',\r\n    alkalinity: 'Alkalinita',\r\n    free_chlorine: 'Voľný chlór',\r\n    total_chlorine: 'Celkový chlór',\r\n    pressure: 'Tlak filtra',\r\n    specific_gravity: 'Špecifická hmotnosť',\r\n    magnesium: 'Magnézium',\r\n    water_level: 'Úroveň vody',\r\n    flow_rate: 'Prietok',\r\n    uv_radiation: 'UV žiarenie',\r\n    product_volume: 'Objem produktu',\r\n    product_weight: 'Hmotnosť produktu',\r\n    ec: 'Elektrická Vodivosť',\r\n  },\r\n  time: {\r\n    seconds: 'práve teraz',\r\n    minutes: '{minutes} minút{plural} pred',\r\n    hours: '{hours} hodín{plural} pred',\r\n    days: '{days} dní{plural} pred',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'נמוך מדי',\r\n    2: 'נמוך מאוד',\r\n    3: 'אידיאלי',\r\n    4: 'אידיאלי',\r\n    5: 'גבוה מאוד',\r\n    6: 'גבוה מדי',\r\n  },\r\n  sensor: {\r\n    temperature: 'טמפרטורה',\r\n    ph: 'PH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'מליחות',\r\n    cya: 'חומצה ציאנורית',\r\n    calcium: 'סידן',\r\n    phosphate: 'פוספט',\r\n    alkalinity: 'אלקליניות',\r\n    free_chlorine: 'כלור חופשי',\r\n    total_chlorine: 'כלור כולל',\r\n    pressure: 'לחץ מסנן',\r\n    specific_gravity: 'משקל סגולי',\r\n    magnesium: 'מגנזיום',\r\n    water_level: 'מפלס מים',\r\n    flow_rate: 'קצב זרימה',\r\n    uv_radiation: 'קרינת UV',\r\n    product_volume: 'נפח מוצר',\r\n    product_weight: 'משקל מוצר',\r\n    ec: 'מוליכות חשמלית',\r\n  },\r\n  time: {\r\n    seconds: 'הרגע',\r\n    minutes: 'לפני {minutes} דקות{plural}',\r\n    hours: 'לפני {hours} שעות{plural}',\r\n    days: 'לפני {days} ימים{plural}',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Слишком низкий',\r\n    2: 'Приемлемо низкий',\r\n    3: 'Идеальный',\r\n    4: 'Идеальный',\r\n    5: 'Приемлемо высокий',\r\n    6: 'Слишком высокий',\r\n  },\r\n  sensor: {\r\n    temperature: 'Температура',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Соленость',\r\n    cya: 'Циануровая кислота',\r\n    calcium: 'Кальций',\r\n    phosphate: 'Фосфаты',\r\n    alkalinity: 'Щелочность',\r\n    free_chlorine: 'Свободный хлор',\r\n    total_chlorine: 'Общий хлор',\r\n    pressure: 'Давление фильтра',\r\n    specific_gravity: 'Удельный вес',\r\n    magnesium: 'Магний',\r\n    water_level: 'Уровень воды',\r\n    flow_rate: 'Расход воды',\r\n    uv_radiation: 'УФ-излучение',\r\n    product_volume: 'Объем продукта',\r\n    product_weight: 'Вес продукта',\r\n    ec: 'Электропроводность',\r\n  },\r\n  time: {\r\n    seconds: 'только что',\r\n    minutes: '{minutes} минут{plural} назад',\r\n    hours: '{hours} часов{plural} назад',\r\n    days: '{days} дней{plural} назад',\r\n  },\r\n};\r\n","/**\n * @fileoverview Translation system for the Pool Monitor Card\n * @description Manages translations and localization for the card interface.\n * Supports multiple languages with fallback to English if a translation is missing.\n */\n\nimport en from './en.js';\nimport fr from './fr.js';\nimport es from './es.js';\nimport de from './de.js';\nimport it from './it.js';\nimport nl from './nl.js';\nimport pt from './pt.js';\nimport ptBR from './pt-br.js';\nimport ro from './ro.js';\nimport sk from './sk.js';\nimport he from './he.js';\nimport ru from './ru.js';\n\n/**\n * @const {Object} translations\n * @description Collection of all available translations indexed by language code\n * Supported languages:\n * - en: English\n * - fr: French\n * - es: Spanish\n * - de: German\n * - it: Italian\n * - nl: Dutch\n * - pt: Portuguese\n * - pt-br: Brazilian Portuguese\n * - ro: Romanian\n * - sk: Slovak\n * - he: Hebrew\n * - ru: Russian\n */\nexport const translations = {\n  en,\n  fr,\n  es,\n  de,\n  it,\n  nl,\n  pt,\n  'pt-br': ptBR,\n  ro,\n  sk,\n  he,\n  ru,\n};\n\n/**\n * @function getTranslation\n * @description Retrieves a translation for a given key in the specified language\n * @param {string} lang - Language code (e.g., 'en', 'fr')\n * @param {string} key - Translation key (can be nested using dot notation)\n * @returns {string} The translated text or the key itself if translation not found\n * @example\n * getTranslation('en', 'common.temperature') // returns \"Temperature\"\n * getTranslation('fr', 'common.temperature') // returns \"Température\"\n */\nexport const getTranslation = (lang, key) => {\n  const keys = key.split('.');\n  let result = translations[lang] || translations.en;\n\n  for (const k of keys) {\n    if (result && typeof result === 'object') {\n      result = result[k];\n    } else {\n      return key; // Fallback to key if translation not found\n    }\n  }\n\n  return result || key;\n};\n\n/**\n * @function formatTranslation\n * @description Formats a translation string by replacing placeholders with values\n * @param {string} translation - The translation string containing placeholders\n * @param {Object} values - Object containing values to replace placeholders\n * @returns {string} The formatted translation string\n * @example\n * formatTranslation(\"Hello {name}!\", { name: \"John\" }) // returns \"Hello John!\"\n */\nexport const formatTranslation = (translation, values) => {\n  if (!values) return translation;\n\n  return Object.entries(values).reduce((acc, [key, value]) => {\n    return acc.replace(`{${key}}`, value);\n  }, translation);\n};\n","/**\n * @fileoverview Configuration definitions for the Pool Monitor Card\n */\n\n/**\n * @const {Object} DEFAULT_CONFIG - Default configuration for the Pool Monitor Card\n * @property {Object} display - Display settings\n * @property {boolean} display.compact - Whether to use compact display mode\n * @property {boolean} display.show_names - Whether to show sensor names\n * @property {boolean} display.show_labels - Whether to show labels\n * @property {boolean} display.show_last_updated - Whether to show last updated time\n * @property {boolean} display.show_icons - Whether to show icons\n * @property {boolean} display.show_units - Whether to show measurement units\n * @property {boolean} display.gradient - Whether to show gradient background\n * @property {string} display.language - Language code for translations\n *\n * @property {Object} colors - Color configuration\n * @property {string} colors.low - Color for low values\n * @property {string} colors.warn - Color for warning values\n * @property {string} colors.normal - Color for normal values\n * @property {string} colors.cool - Color for cool values\n * @property {string} colors.marker - Color for markers\n * @property {string} colors.hi_low - Color for high/low indicators\n *\n * @property {Object} sensors - Sensor configurations\n */\nexport const DEFAULT_CONFIG = {\n  display: {\n    compact: false,\n    show_names: true,\n    show_labels: true,\n    show_last_updated: false,\n    show_icons: true,\n    show_units: true,\n    gradient: true,\n    language: 'en',\n  },\n\n  colors: {\n    low: '#fdcb6e',\n    warn: '#e17055',\n    normal: '#00b894',\n    cool: '#00BFFF',\n    marker: '#000000',\n    hi_low: '#00000099',\n  },\n\n  sensors: {\n    temperature: {\n      name: 'Temperature',\n      unit: '°C',\n      setpoint: 27,\n      step: 1,\n      mode: 'heatflow',\n    },\n    orp: {\n      name: 'ORP',\n      unit: 'mV',\n      setpoint: 700,\n      step: 50,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    ec: {\n      name: 'Electrical Conductivity',\n      unit: 'µS/cm',\n      setpoint: 4000,\n      step: 200,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    tds: {\n      name: 'TDS',\n      unit: 'g/L',\n      setpoint: 5,\n      step: 0.5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    ph: {\n      name: 'pH',\n      unit: 'pH',\n      setpoint: 7.2,\n      step: 0.2,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    salinity: {\n      name: 'Salinity',\n      unit: 'ppm',\n      setpoint: 3000,\n      step: 500,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    cya: {\n      name: 'Cyanuric Acid',\n      unit: 'ppm',\n      setpoint: 40,\n      step: 10,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    calcium: {\n      name: 'Calcium',\n      unit: 'ppm',\n      setpoint: 300,\n      step: 100,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    phosphate: {\n      name: 'Phosphate',\n      unit: 'ppb',\n      setpoint: 50,\n      step: 10,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    alkalinity: {\n      name: 'Alkalinity',\n      unit: 'ppm',\n      setpoint: 100,\n      step: 20,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    free_chlorine: {\n      name: 'Free Chlorine',\n      unit: 'ppm',\n      setpoint: 3,\n      step: 0.5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    total_chlorine: {\n      name: 'Total Chlorine',\n      unit: 'ppm',\n      setpoint: 3,\n      step: 0.5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    pressure: {\n      name: 'Filter Pressure',\n      unit: 'psi',\n      setpoint: 12,\n      step: 2,\n      mode: 'centric',\n    },\n    specific_gravity: {\n      name: 'Specific Gravity',\n      unit: 'sg',\n      setpoint: 1.1,\n      step: 0.2,\n      mode: 'centric',\n    },\n    magnesium: {\n      name: 'Magnesium',\n      unit: 'ppm',\n      setpoint: 1200,\n      step: 100,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    water_level: {\n      name: 'Water Level',\n      unit: '%',\n      setpoint: 100,\n      step: 10,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    flow_rate: {\n      name: 'Flow Rate',\n      unit: 'm³/h',\n      setpoint: 10,\n      step: 1,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    uv_radiation: {\n      name: 'UV Radiation',\n      unit: 'mW/cm²',\n      setpoint: 4,\n      step: 1,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    product_volume: {\n      name: 'Product Volume',\n      unit: 'L',\n      setpoint: 20,\n      step: 5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n    product_weight: {\n      name: 'Product Weight',\n      unit: 'kg',\n      setpoint: 25,\n      step: 5,\n      mode: 'centric',\n      min_limit: 0,\n    },\n  },\n};\n\n/**\n * @function getSensorConfig\n * @description Get the sensor configuration for a specific sensor type\n * @param {string} type - The type of sensor to get configuration for\n * @returns {Object} The sensor configuration\n */\nexport function getSensorConfig(type) {\n  return DEFAULT_CONFIG.sensors[type];\n}\n\n/**\n * @function getDisplayConfig\n * @description Get the display configuration settings\n * @returns {Object} The display configuration\n */\nexport function getDisplayConfig() {\n  return DEFAULT_CONFIG.display;\n}\n\n/**\n * @function getColorConfig\n * @description Get the color configuration settings\n * @returns {Object} The color configuration\n */\nexport function getColorConfig() {\n  return DEFAULT_CONFIG.colors;\n}\n\n/**\n * @const {string[]} SUPPORTED_SENSORS - List of supported sensor types\n * @description Array of sensor types supported by the card, derived from sensor configuration\n */\nexport const SUPPORTED_SENSORS = Object.keys(DEFAULT_CONFIG.sensors);\n","/**\n * @fileoverview Constants used throughout the Pool Monitor Card\n * @version ${VERSION}\n */\n\n/** @const {string} VERSION - Current version of the card */\nconst VERSION = '2.1.0';\n/* global __BUILD_TIMESTAMP__ */\n/** @const {string} BUILD_TIMESTAMP - Build timestamp for the card */\nconst BUILD_TIMESTAMP = __BUILD_TIMESTAMP__ || 'dev';\n\n/** @const {string} CARD_VERSION - Complete version string including build timestamp */\nexport const CARD_VERSION = `${VERSION} (${BUILD_TIMESTAMP})`;\n\n/**\n * @const {Object} CARD_INFO - Basic information about the card\n * @property {string} cardType - Type identifier for the card\n * @property {string} cardName - Display name of the card\n * @property {string} cardDescription - Detailed description of the card's functionality\n */\nexport const CARD_INFO = {\n  cardType: 'pool-monitor-card',\n  cardName: 'Pool Monitor Card',\n  cardDescription:\n    'The \"Pool Monitor Card\" is a home assistant plugin that provides information about the temperature, pH, and ORP levels of your swimming pool',\n};\n\n// Import supported sensors list from config\nexport { SUPPORTED_SENSORS } from './configs/config.js';\n\n/**\n * @const {Object} CONSOLE_STYLE - Styling configuration for console output\n * @property {string} title - CSS styling for the title in console\n * @property {string} version - CSS styling for the version in console\n */\nexport const CONSOLE_STYLE = {\n  title: 'color: white; background: green; font-weight: 700;',\n  version: 'color: green; background: white; font-weight: 700;',\n};\n","/**\n * @fileoverview Styles definition for the Pool Monitor Card\n * @description This file contains all CSS styles used in the Pool Monitor Card component.\n * The styles are defined using LitElement's CSS template literals and use Home Assistant's CSS variables\n * for consistent theming across the application.\n */\n\nvar LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\nvar css = LitElement.prototype.css;\n\n/**\n * @const {CSSResult} styles - CSS styles for the Pool Monitor Card\n * @description Defines all visual styles for the card including:\n * - Card layout and appearance\n * - Section layouts (normal and compact modes)\n * - Title styling\n * - Container layouts and positioning\n * - Marker and indicator styles\n * - Gradient and color transitions\n * - Responsive design adjustments\n *\n * Uses Home Assistant CSS variables for theming:\n * - --ha-card-background\n * - --ha-card-border-radius\n * - --ha-card-border-width\n * - --ha-card-box-shadow\n * - --primary-text-color\n */\nexport const styles = css`\n  /** Host element styles */\n  :host {\n    background: var(--ha-card-background, var(--card-background-color, white));\n    border-radius: var(--ha-card-border-radius, 12px);\n    border-width: var(--ha-card-border-width, 4px);\n    box-shadow: var(--ha-card-box-shadow);\n    color: var(--primary-text-color);\n    display: block;\n    transition: all 0.3s ease-out 0s;\n    position: relative;\n    padding-top: 25px;\n  }\n\n  /** Section layouts */\n  .section {\n    padding-bottom: 10px;\n    padding: 0px;\n  }\n\n  .section-compact {\n    padding-bottom: 5px;\n    padding: 0px;\n  }\n\n  /** Title styles */\n  .pool-monitor-title {\n    font-size: 1.5rem;\n    font-weight: 500;\n    padding-left: 15px;\n    padding-bottom: 15px;\n    margin: 0;\n  }\n\n  /** Entity image container */\n  .pool-monitor-entity-img {\n    text-align: right;\n    width: 10%;\n    float: left;\n  }\n\n  /** Main container layouts */\n  .pool-monitor-container {\n    display: grid;\n    padding: 5px;\n    height: 15px;\n  }\n\n  .pool-monitor-container-values {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    padding-top: 0px;\n    padding-left: 20px;\n    margin-top: -10px;\n  }\n\n  .pool-monitor-container-marker {\n    display: grid;\n    grid-template-columns: 10% repeat(6, 1fr) 5%;\n    padding: 10px;\n    grid-template-rows: 15px;\n    line-height: 15px;\n    position: relative;\n  }\n\n  .grid-container {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    padding: 0;\n    grid-template-rows: 15px;\n    line-height: 15px;\n    position: relative;\n    margin: 0px;\n  }\n\n  .pool-monitor-container-marker .marker {\n    text-align: center;\n    justify-self: center;\n    width: 80px;\n    height: 20px;\n    padding-top: 5px;\n    border-radius: 5px;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .pool-monitor-container-marker .marker-state {\n    width: 60px;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .pool-monitor-container-marker .triangle {\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    position: absolute;\n    bottom: 0px;\n    transform: translateX(-50%);\n  }\n\n  .grid-item {\n    padding: 7px 0;\n    margin: 0;\n  }\n\n  .grid-item-text-box {\n    font-size: 0.8em;\n    text-align: center;\n    font-weight: 700;\n  }\n\n  .item-row {\n    grid-row: 1;\n  }\n\n  .cursor {\n    text-align: center;\n    justify-self: center;\n    font-size: 13px;\n    font-weight: 600;\n    color: black;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .cursor-text {\n    position: absolute;\n    width: 200px;\n    height: 17px;\n    padding-left: 3px;\n    padding-right: 3px;\n    padding-top: 0px;\n    margin-top: -1px;\n    font-size: 11px;\n    font-weight: 500;\n    text-align: right;\n    color: black;\n    justify-self: right;\n    z-index: 1;\n  }\n\n  .progress-bar-child {\n    height: 100%;\n    width: 100%;\n    border-radius: 5px;\n  }\n\n  .sensor-monitor-container {\n    position: relative;\n    height: 20px;\n    margin: 0px 0px 0px 0px;\n    border-radius: 5px;\n    overflow: hidden;\n  }\n\n  .warning-message {\n    background-color: var(--warning-color, rgba(255, 152, 0, 0.1));\n    border-left: 4px solid var(--warning-color, #ff9800);\n    border-radius: 4px;\n    padding: 12px 16px;\n    margin: 8px 0;\n    color: var(--warning-text-color, var(--primary-text-color));\n    font-size: 0.95em;\n    line-height: 1.4;\n    display: flex;\n    align-items: center;\n    animation: fadeIn 0.3s ease-in-out;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  .warning-message ha-icon {\n    color: var(--warning-color, #ff9800);\n    margin-right: 12px;\n    flex-shrink: 0;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n","var LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\r\nvar html = LitElement.prototype.html;\r\n\r\n/**\r\n * @class cardContent\r\n * @description Class responsible for generating the HTML content of the pool monitor card\r\n */\r\nexport class cardContent {\r\n  /**\r\n   * @static\r\n   * @method generateTitle\r\n   * @description Generates the title section of the card\r\n   * @param {Object} config - The card configuration\r\n   * @param {string} [config.title] - Optional title to display\r\n   * @returns {TemplateResult} The rendered title HTML\r\n   */\r\n  static generateTitle(config) {  \r\n    const title =\r\n      config.title !== undefined\r\n        ? html` <h1 class=\"pool-monitor-title\">${config.title}</h1> `\r\n        : html``;\r\n\r\n    return html`${title}`;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method generateBody\r\n   * @description Generates the main body content of the card\r\n   * @param {Object} config - The card configuration\r\n   * @param {Object} data - The sensor data to display\r\n   * @param {string} data.name - Sensor name\r\n   * @param {string} data.entity - Entity ID\r\n   * @param {string} data.color - Color for the marker\r\n   * @param {number} data.pct_marker - Percentage position for the marker\r\n   * @param {string} data.value - Current sensor value\r\n   * @param {string} data.unit - Unit of measurement\r\n   * @param {string} data.state - Current state text\r\n   * @param {string} data.side_align - Alignment direction\r\n   * @param {number} data.pct_state_step - Percentage position for state\r\n   * @param {boolean} data.hide_icon - Whether to hide the icon\r\n   * @param {boolean} data.is_mdi - Whether the icon is an MDI icon\r\n   * @param {string} [data.mdi_icon] - MDI icon name if is_mdi is true\r\n   * @param {string} [data.img_src] - Image source if is_mdi is false\r\n   * @returns {TemplateResult} The rendered body HTML\r\n   */\r\n  static generateBody(config, data) {\r\n    if (!data) {\r\n      return html`\r\n        <div class=\"warning-message\">\r\n          No sensor data available\r\n        </div>\r\n      `;\r\n    }\r\n    return html`\r\n      <!-- ##### ${data.name} section ##### -->\r\n      <div class=\"section\" @click=${() => this._moreinfo(data.entity)}>\r\n        <div class=\"pool-monitor-container-marker\">\r\n          <div\r\n            class=\"marker\"\r\n            style=\"background-color: ${data.color} ;color: black;left: ${data.pct_marker}%;\"\r\n          >\r\n            ${data.value} ${data.unit}\r\n          </div>\r\n          <div\r\n            class=\"marker-state\"\r\n            style=\"font-size: 0.8em; padding-top: 5px;color:${data.color};width: 200px;padding-${data.side_align}:40px;text-align:${data.side_align};background-color:transparent ;${data.side_align}: ${data.pct_state_step}%;\"\r\n          >\r\n            ${data.state}\r\n          </div>\r\n          <div\r\n            class=\"triangle\"\r\n            style=\"border-top: 10px solid ${data.color} ;left: ${data.pct - 1}%;\"\r\n          ></div>\r\n        </div>\r\n        ${!data.hide_icon\r\n          ? html`\r\n              <div class=\"pool-monitor-entity-img\">\r\n                ${data.is_mdi\r\n                  ? html`\r\n                      <ha-icon icon=\"${data.mdi_icon}\" style=\"width: 32px; height: 32px;\"></ha-icon>\r\n                    `\r\n                  : html` <img src=\"${data.img_src}\" style=\"width: 32px; height: 32px;\" /> `}\r\n              </div>\r\n            `\r\n          : ''}\r\n        <div class=\"pool-monitor-container\">\r\n          ${config.display.gradient\r\n            ? html`\r\n                <div\r\n                  class=\"progress-bar-child\"\r\n                  style=\"background: linear-gradient(to right, \r\n              ${data.mode === 'heatflow'\r\n                    ? `${config.colors.cool} 15%, \r\n                 ${config.colors.low} 50%, \r\n                 ${config.colors.warn} 85%`\r\n                    : `${config.colors.warn} 5%, \r\n                 ${config.colors.low} 30%, \r\n                 ${config.colors.normal}, \r\n                 ${config.colors.normal}, \r\n                 ${config.colors.low} 70%, \r\n                 ${config.colors.warn} 95%`}\r\n            );\"\r\n                ></div>\r\n              `\r\n            : html`\r\n                <div class=\"grid-container\">\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 1; border-radius: 5px 0px 0px 5px\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 2;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 3;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 4;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 5;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 6; border-radius: 0px 5px 5px 0px;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                </div>\r\n                <div\r\n                  style=\"display: flex; justify-content: space-between; margin: 0 10px; font-size: 0.7em; color: var(--secondary-text-color);\"\r\n                >\r\n                  <span>${data.min}</span>\r\n                  <span>${data.max}</span>\r\n                </div>\r\n              `}\r\n          ${data.pct_min !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-left: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_min}%;\"\r\n              ></div>`\r\n            : ''}\r\n          ${data.pct_max !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-right: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_max}%;\"\r\n              ></div>`\r\n            : ''}\r\n        </div>\r\n        <div class=\"pool-monitor-container-values\">\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 1 ; border-radius: 5px 0px 0px 5px\"\r\n            class=\"grid-item item-row\"\r\n          >\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[0]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 2 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[1]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 3 ;\" class=\"grid-item item-row\">\r\n            <div\r\n              style=\"font-size: 0.8em;color:${config.colors\r\n                .normal};text-align:right;margin:-5px 2px 0 0 \"\r\n            >\r\n              ${data.setpoint_class[2]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 4 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[3]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 5 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[4]}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 6 ; border-radius: 0px 5px 5px 0px;\"\r\n            class=\"grid-item item-row\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div style=\"text-align:left;padding-left:15px;\">\r\n        ${data.title}<br /><small style=\"position: relative;top:-5px;font-size:9px;color:lightgrey\"\r\n          >${data.last_updated}</small\r\n        >\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method generateCompactBody\r\n   * @description Generates the compact body content of the card\r\n   * @param {Object} config - The card configuration\r\n   * @param {Object} data - The sensor data to display\r\n   * @param {string} data.name - Sensor name\r\n   * @param {string} data.entity - Entity ID\r\n   * @param {string} data.color - Color for the marker\r\n   * @param {number} data.pct_marker - Percentage position for the marker\r\n   * @param {string} data.value - Current sensor value\r\n   * @param {string} data.unit - Unit of measurement\r\n   * @param {string} data.state - Current state text\r\n   * @param {string} data.side_align - Alignment direction\r\n   * @param {number} data.pct_state_step - Percentage position for state\r\n   * @param {boolean} data.hide_icon - Whether to hide the icon\r\n   * @param {boolean} data.is_mdi - Whether the icon is an MDI icon\r\n   * @param {string} [data.mdi_icon] - MDI icon name if is_mdi is true\r\n   * @param {string} [data.img_src] - Image source if is_mdi is false\r\n   * @returns {TemplateResult} The rendered compact body HTML\r\n   */\r\n  static generateCompactBody(config, data) {\r\n    if (!data) {\r\n      return html`\r\n        <div class=\"warning-message\">\r\n          No sensor data available\r\n        </div>\r\n      `;\r\n    }\r\n    return html`\r\n      <!-- ##### ${data.name} section ##### -->\r\n      <div class=\"section-compact\" @click=${() => this._moreinfo(data.entity)}>\r\n        ${!data.hide_icon\r\n          ? html`\r\n              <div class=\"pool-monitor-entity-img\">\r\n                ${data.is_mdi\r\n                  ? html`\r\n                      <ha-icon icon=\"${data.mdi_icon}\" style=\"width: 24px; height: 24px;\"></ha-icon>\r\n                    `\r\n                  : html` <img src=\"${data.img_src}\" style=\"width: 24px; height: 24px;\" /> `}\r\n              </div>\r\n            `\r\n          : ''}\r\n        <div class=\"pool-monitor-container\">\r\n          ${config.display.gradient\r\n            ? html`\r\n                <div\r\n                  class=\"progress-bar-child\"\r\n                  style=\"background: linear-gradient(to right, \r\n              ${data.mode === 'heatflow'\r\n                    ? `${config.colors.cool} 15%, \r\n                 ${config.colors.low} 50%, \r\n                 ${config.colors.warn} 85%`\r\n                    : `${config.colors.warn} 5%, \r\n                 ${config.colors.low} 30%, \r\n                 ${config.colors.normal}, \r\n                 ${config.colors.normal}, \r\n                 ${config.colors.low} 70%, \r\n                 ${config.colors.warn} 95%`}\r\n            );\"\r\n                ></div>\r\n              `\r\n            : html`\r\n                <div class=\"grid-container\">\r\n                  <!-- <div style=\"background-color: transparent; grid-column: 1 ; border: 0px; box-shadow:none\" class=\"grid-item item-row\"> <div style=\"font-size: 0.8em;color:lightgrey;text-align:left;margin:3px 2px 0 0 \">${data.unit}</div></div> -->\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 1; border-radius: 5px 0px 0px 5px\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 2;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 3;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 4;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 5;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 6; border-radius: 0px 5px 5px 0px;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                </div>\r\n                <div\r\n                  style=\"display: flex; justify-content: space-between; margin: 0 10px; font-size: 0.7em; color: var(--secondary-text-color);\"\r\n                >\r\n                  <span>${data.min}</span>\r\n                  <span>${data.max}</span>\r\n                </div>\r\n              `}\r\n          <div\r\n            class=\"cursor-text\"\r\n            style=\"border-${data.side_align}: 5px solid ${config.marker}; text-align:${data.side_align};background-color:transparent ;${data.side_align}: ${data.pct_cursor}%;\"\r\n          >\r\n            &nbsp; ${data.title} ${data.value} ${data.unit} ${data.separator} ${data.state} &nbsp;\r\n          </div>\r\n          ${data.pct_min !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-left: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_min}%;\"\r\n              ></div>`\r\n            : ''}\r\n          ${data.pct_max !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-right: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_max}%;\"\r\n              ></div>`\r\n            : ''}\r\n        </div>\r\n        <div class=\"pool-monitor-container-values\">\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 1 ; border-radius: 5px 0px 0px 5px\"\r\n            class=\"grid-item item-row\"\r\n          >\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[0]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 2 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[1]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 3 ;\" class=\"grid-item item-row\">\r\n            <div\r\n              style=\"font-size: 0.8em;color:${config.colors\r\n                .normal};text-align:right;margin:-5px 2px 0 0 \"\r\n            >\r\n              ${data.setpoint_class[2]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 4 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[3]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 5 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[4]}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 6 ; border-radius: 0px 5px 5px 0px;\"\r\n            class=\"grid-item item-row\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method _moreinfo\r\n   * @description Dispatches a more-info event for the given entity\r\n   * @param {string} entity - Entity ID\r\n   */\r\n  static _moreinfo(entity) {\r\n    const event = new Event('hass-more-info', {\r\n      bubbles: true,\r\n      composed: true,\r\n    });\r\n    event.detail = { entityId: entity };\r\n    document.querySelector('home-assistant').dispatchEvent(event);\r\n  }\r\n}\r\n","var LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\r\nvar html = LitElement.prototype.html;\r\n\r\nimport { getTranslation, formatTranslation } from './locales/translations.js';\r\nimport { CARD_VERSION, CARD_INFO, CONSOLE_STYLE, SUPPORTED_SENSORS } from './constants.js';\r\nimport { styles } from './styles/styles.js';\r\nimport { cardContent } from './components/card-content.js';\r\nimport { getSensorConfig, getDisplayConfig, getColorConfig } from './configs/config.js';\r\n\r\nconsole.info(\r\n  `%c POOL-MONITORING-CARD %c ${CARD_VERSION} `,\r\n  CONSOLE_STYLE.title,\r\n  CONSOLE_STYLE.version,\r\n);\r\n\r\n/**\r\n * @class PoolMonitorCard\r\n * @extends {LitElement}\r\n * @description Custom Home Assistant card for monitoring pool sensors and displaying pool-related information\r\n * @property {Object} hass - Home Assistant instance\r\n * @property {Object} config - Card configuration\r\n * @version ${CARD_VERSION}\r\n */\r\nexport class PoolMonitorCard extends LitElement {\r\n  static cardType = CARD_INFO.cardType;\r\n  static cardName = CARD_INFO.cardName;\r\n  static cardDescription = CARD_INFO.cardDescription;\r\n\r\n  /**\r\n   * @static\r\n   * @returns {Object} Properties definition for the card\r\n   */\r\n  static get properties() {\r\n    return {\r\n      hass: {},\r\n      config: {},\r\n    };\r\n  }\r\n\r\n  static styles = styles;\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @method render\r\n   * @description Renders the pool monitor card content\r\n   * @returns {TemplateResult} The rendered HTML template\r\n   */\r\n  render() {\r\n    const config = this.getConfig();\r\n    const data = this.processData();\r\n    const generateContent = config.display.compact\r\n      ? cardContent.generateCompactBody\r\n      : cardContent.generateBody;\r\n\r\n    // Vérifier si nous avons des données valides\r\n    if (!data || Object.keys(data).length === 0) {\r\n      return html` <div id=\"pool-monitor-card\">\r\n        <div class=\"warning-message\">\r\n          <ha-icon icon=\"mdi:alert\"></ha-icon>\r\n          <span>No valid sensor data available</span>\r\n        </div>\r\n      </div>`;\r\n    }\r\n\r\n    return html` <div id=\"pool-monitor-card\">\r\n      ${cardContent.generateTitle(config)}\r\n      ${Object.values(data).map(sensorData => {\r\n        if (sensorData?.invalid) {\r\n          return html`\r\n            <div class=\"warning-message\">\r\n              <ha-icon icon=\"mdi:alert\"></ha-icon>\r\n              <span\r\n                >Sensor ${sensorData?.name || 'unknown'} is not supported. Please verify its\r\n                configuration and ensure it is compatible with the card.</span\r\n              >\r\n            </div>\r\n          `;\r\n        } else if (sensorData?.value === null) {\r\n          return html`\r\n            <div class=\"warning-message\">\r\n              <ha-icon icon=\"mdi:alert\"></ha-icon>\r\n              <span\r\n                >Entity ${sensorData?.entity || 'unknown'} could not be found. Please verify its\r\n                name and ensure the entity is properly configured.</span\r\n              >\r\n            </div>\r\n          `;\r\n        }\r\n        return generateContent(config, sensorData);\r\n      })}\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * @method processData\r\n   * @description Processes the sensor data for the card\r\n   * @returns {Object} The processed sensor data\r\n   */\r\n  processData() {\r\n    const data = {};\r\n    const config = this.getConfig();\r\n\r\n    Object.entries(config.sensors).forEach(([sensorType, sensorConfigs]) => {\r\n      // Convertir en tableau si ce n'est pas déjà le cas (rétrocompatibilité)\r\n      const sensorArray = Array.isArray(sensorConfigs) ? sensorConfigs : [sensorConfigs];\r\n\r\n      sensorArray.forEach((sensor, index) => {\r\n        const sensorKey = `${sensorType}_${index + 1}`;\r\n\r\n        data[sensorKey] = this.calculateData(\r\n          sensorType,\r\n          sensor.title || this.getTranslatedText('sensor.' + sensorType),\r\n          sensor.entity,\r\n          sensor.min,\r\n          sensor.max,\r\n          sensor.setpoint,\r\n          sensor.step,\r\n          sensor.unit,\r\n          sensor.icon,\r\n          sensor.image_url,\r\n          sensor.mode,\r\n          sensor.min_limit,\r\n          sensor.override_value,\r\n          sensor.override,\r\n          sensor.invalid,\r\n        );\r\n      });\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @method getTranslatedText\r\n   * @description Retrieves a translated text based on the provided key and values\r\n   * @param {string} key - The translation key\r\n   * @param {Object} values - The values to replace in the translation\r\n   * @returns {string} The translated text\r\n   */\r\n  getTranslatedText(key, values) {\r\n    const lang = this.config?.display.language || 'en';\r\n    const translation = getTranslation(lang, key);\r\n    return formatTranslation(translation, values);\r\n  }\r\n\r\n  /**\r\n   * @method calculateData\r\n   * @description Calculates the data for a single sensor\r\n   * @param {string} name - The sensor name\r\n   * @param {string} title - The sensor title\r\n   * @param {string} entity - The sensor entity\r\n   * @param {number} entity_min - The minimum entity value\r\n   * @param {number} entity_max - The maximum entity value\r\n   * @param {number} setpoint - The setpoint value\r\n   * @param {number} setpoint_step - The setpoint step value\r\n   * @param {string} unit - The unit of measurement\r\n   * @param {string} icon - The icon to display\r\n   * @param {string} image_url - The image URL to display\r\n   * @param {string} mode - The mode of the sensor\r\n   * @param {number} min_limit - The minimum limit value\r\n   * @param {number} override_value - The override value\r\n   * @param {boolean} override - Whether to override the value\r\n   * @param {boolean} invalid - Whether the sensor is invalid\r\n   * @returns {Object} The calculated sensor data\r\n   */\r\n  calculateData(\r\n    name,\r\n    title,\r\n    entity,\r\n    entity_min,\r\n    entity_max,\r\n    setpoint,\r\n    setpoint_step,\r\n    unit,\r\n    icon,\r\n    image_url,\r\n    mode,\r\n    min_limit,\r\n    override_value,\r\n    override,\r\n    invalid,\r\n  ) {\r\n    const newData = {};\r\n    const config = this.getConfig();\r\n    const defaultConfig = getSensorConfig(name) || {};\r\n\r\n    newData.name = name;\r\n    newData.invalid = invalid;\r\n    newData.mode = mode;\r\n\r\n    newData.title = config.display.show_names ? title : html`&nbsp;`;\r\n\r\n    // Gestion des icônes et images pour chaque capteur\r\n    newData.hide_icon = false;\r\n    newData.is_mdi = false;\r\n    if (!config.display.show_icons) {\r\n      newData.hide_icon = true;\r\n    } else {\r\n      const sensorIcon = icon || '';\r\n      const sensorImage = image_url || '';\r\n\r\n      if (sensorIcon === 'hide') {\r\n        newData.hide_icon = true;\r\n      } else if (sensorImage) {\r\n        newData.img_src = sensorImage;\r\n      } else if (sensorIcon && typeof sensorIcon === 'string' && sensorIcon.startsWith('mdi:')) {\r\n        newData.is_mdi = true;\r\n        newData.mdi_icon = sensorIcon;\r\n      } else {\r\n        newData.img_src = `https://raw.githubusercontent.com/wilsto/pool-monitor-card/master/resources/${name}.png`;\r\n      }\r\n    }\r\n\r\n    // Vérifier si l'entité existe\r\n    if (!this.hass || !this.hass.states || !this.hass.states[entity]) {\r\n      console.warn(`Entity not found: ${entity}`);\r\n      newData.value = null;\r\n      newData.entity = entity;\r\n      return newData;\r\n    }\r\n\r\n    newData.value = parseFloat(this.hass.states[entity].state);\r\n    newData.entity = entity;\r\n\r\n    if (config.display.show_last_updated) {\r\n      newData.last_updated = this.timeFromNow(this.hass.states[entity].last_updated);\r\n    }\r\n\r\n    // Utiliser l'unité de la configuration par défaut si non spécifiée\r\n    newData.unit = config.display.show_units ? unit || defaultConfig.unit || '' : '';\r\n\r\n    if (override) {\r\n      newData.value = override_value || defaultConfig.override;\r\n    }\r\n\r\n    // Vérifier les entités min/max\r\n    newData.min_value =\r\n      entity_min !== undefined &&\r\n      this.hass.states[entity_min] &&\r\n      !isNaN(parseFloat(this.hass.states[entity_min].state))\r\n        ? parseFloat(this.hass.states[entity_min].state)\r\n        : newData.value;\r\n\r\n    newData.max_value =\r\n      entity_max !== undefined &&\r\n      this.hass.states[entity_max] &&\r\n      !isNaN(parseFloat(this.hass.states[entity_max].state))\r\n        ? parseFloat(this.hass.states[entity_max].state)\r\n        : newData.value;\r\n\r\n    // Utiliser les valeurs par défaut de la configuration si non spécifiées\r\n    setpoint =\r\n      setpoint !== undefined\r\n        ? parseFloat(setpoint)\r\n        : defaultConfig.setpoint !== undefined\r\n          ? parseFloat(defaultConfig.setpoint)\r\n          : newData.value;\r\n    setpoint_step =\r\n      setpoint_step !== undefined\r\n        ? parseFloat(setpoint_step)\r\n        : defaultConfig.step !== undefined\r\n          ? parseFloat(defaultConfig.step)\r\n          : 0.1;\r\n\r\n    const countDecimals = Math.max(this.countDecimals(setpoint), this.countDecimals(setpoint_step));\r\n\r\n    if (newData.value) {\r\n      newData.value = parseFloat(this.hass.states[entity].state);\r\n    }\r\n\r\n    newData.setpoint = setpoint;\r\n\r\n    // Calculate setpoint classes with min_limit consideration\r\n    const minLimit = min_limit !== undefined ? Number(min_limit) : -Infinity;\r\n    const sp_minus_2 = Math.max(minLimit, setpoint - 2 * setpoint_step);\r\n    const sp_minus_1 = Math.max(minLimit, setpoint - setpoint_step);\r\n    const sp = Math.max(minLimit, setpoint);\r\n    const sp_plus_1 = Math.max(minLimit, setpoint + setpoint_step);\r\n    const sp_plus_2 = Math.max(minLimit, setpoint + 2 * setpoint_step);\r\n\r\n    newData.setpoint_class = [\r\n      sp_minus_2.toFixed(countDecimals),\r\n      sp_minus_1.toFixed(countDecimals),\r\n      sp.toFixed(countDecimals),\r\n      sp_plus_1.toFixed(countDecimals),\r\n      sp_plus_2.toFixed(countDecimals),\r\n    ];\r\n\r\n    newData.separator = config.display.show_labels ? '-' : '';\r\n    newData.color = 'transparent';\r\n\r\n    // Ensure value respects min_limit\r\n    if (newData.value !== null) {\r\n      newData.value = Math.max(minLimit, newData.value);\r\n    }\r\n\r\n    if (mode === 'heatflow') {\r\n      // Three-level gradient for heatflow mode\r\n      if (Number(newData.value) < Number(newData.setpoint_class[1])) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.1') : '';\r\n        newData.color = config.colors.cool;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[1]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[3])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.3') : '';\r\n        newData.color = config.colors.low;\r\n      } else {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.5') : '';\r\n        newData.color = config.colors.warn;\r\n      }\r\n    } else {\r\n      // Six-level gradient for default mode\r\n      if (Number(newData.value) < Number(newData.setpoint_class[0])) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.1') : '';\r\n        newData.color = config.colors.warn;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[0]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[1])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.2') : '';\r\n        newData.color = config.colors.low;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[1]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[2])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.3') : '';\r\n        newData.color = config.colors.normal;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[2]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[3])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.4') : '';\r\n        newData.color = config.colors.normal;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[3]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[4])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.5') : '';\r\n        newData.color = config.colors.low;\r\n      } else if (Number(newData.value) >= Number(newData.setpoint_class[4])) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.6') : '';\r\n        newData.color = config.colors.warn;\r\n      }\r\n    }\r\n    newData.progressClass = name === 'temperature' ? 'progress-temp' : 'progress';\r\n\r\n    newData.pct = Math.max(\r\n      0,\r\n      Math.min(\r\n        98.5,\r\n        (Math.max(0, newData.value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) *\r\n          0.85 *\r\n          100 +\r\n          15,\r\n      ),\r\n    ).toFixed(0);\r\n    newData.pct_min = Math.max(\r\n      0,\r\n      Math.min(\r\n        98.5,\r\n        (Math.max(0, newData.min_value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) *\r\n          0.85 *\r\n          100 +\r\n          15,\r\n      ),\r\n    ).toFixed(0);\r\n    newData.pct_max = Math.max(\r\n      0,\r\n      Math.min(\r\n        98.5,\r\n        (Math.max(0, newData.max_value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) *\r\n          0.85 *\r\n          100 +\r\n          15,\r\n      ),\r\n    ).toFixed(0);\r\n    newData.pct_marker = newData.value > newData.setpoint ? newData.pct - 12 : newData.pct - 5;\r\n    newData.side_align = newData.value > setpoint ? 'right' : 'left';\r\n    newData.pct_cursor =\r\n      newData.value > setpoint ? 100 - parseFloat(newData.pct) : parseFloat(newData.pct) - 2;\r\n    newData.pct_state_step =\r\n      newData.value > setpoint ? 105 - parseFloat(newData.pct) : parseFloat(newData.pct) + 5;\r\n    newData.pct_min =\r\n      newData.value > setpoint\r\n        ? 100 - parseFloat(newData.pct_min)\r\n        : parseFloat(newData.pct_min) - 2;\r\n    newData.pct_max =\r\n      newData.value > setpoint\r\n        ? 100 - parseFloat(newData.pct_max)\r\n        : parseFloat(newData.pct_max) - 2;\r\n\r\n    return newData;\r\n  }\r\n\r\n  /**\r\n   * @method countDecimals\r\n   * @description Counts the number of decimal places in a number\r\n   * @param {number} number - The number to analyze\r\n   * @returns {number} The number of decimal places (0 if integer or invalid)\r\n   */\r\n  countDecimals(number) {\r\n    if (number === undefined || number === null) {\r\n      return 0;\r\n    }\r\n    if (Math.floor(number) === number) {\r\n      // si c'est un nombre entier\r\n      return 0;\r\n    }\r\n    const str = number.toString();\r\n    if (str.includes('.')) {\r\n      return str.split('.')[1].length || 0;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @method timeFromNow\r\n   * @description Calculates the time from now for a given date\r\n   * @param {string} dateTime - The date and time to calculate from\r\n   * @returns {string} The time from now\r\n   */\r\n  timeFromNow(dateTime) {\r\n    const date = new Date(dateTime);\r\n    const diff = Date.now() - date.getTime();\r\n\r\n    const t = (key, n) => {\r\n      let plural = n == 1 ? '' : 's';\r\n      let translation = this.getTranslatedText(`time.${key}`);\r\n      translation = translation.replace('{' + key + '}', n);\r\n      translation = translation.replace('{plural}', plural);\r\n      return translation;\r\n    };\r\n\r\n    const minutes = Math.floor(diff / 60000);\r\n    const hours = Math.floor(minutes / 60);\r\n    const days = Math.floor(hours / 24);\r\n\r\n    if (minutes < 1) return t('seconds', 0);\r\n    if (minutes < 60) return t('minutes', minutes);\r\n    if (hours < 24) return t('hours', hours);\r\n    return t('days', days);\r\n  }\r\n\r\n  /**\r\n   * @method getConfig\r\n   * @description Retrieves the card configuration\r\n   * @returns {Object} The card configuration\r\n   */\r\n  getConfig() {\r\n    return this.config;\r\n  }\r\n\r\n  /**\r\n   * @method setConfig\r\n   * @description Sets the card configuration\r\n   * @param {Object} config - The new card configuration\r\n   */\r\n  setConfig(config) {\r\n    // Utiliser la configuration par défaut de config.js\r\n    const defaultConfig = {\r\n      display: getDisplayConfig(),\r\n      colors: getColorConfig(),\r\n    };\r\n\r\n    // Merge avec la configuration utilisateur\r\n    const newConfig = {\r\n      ...config,\r\n      display: {\r\n        ...defaultConfig.display,\r\n        ...(config.display || {}),\r\n      },\r\n      colors: {\r\n        ...defaultConfig.colors,\r\n        ...(config.colors || {}),\r\n      },\r\n      // Créer une copie profonde de la configuration des sensors\r\n      sensors: {},\r\n    };\r\n\r\n    if (!config.sensors) {\r\n      console.warn(`Legacy configuration detected, please move sensors under \"sensors\" key`, {\r\n        config,\r\n      });\r\n      throw new Error(\r\n        'Legacy configuration detected. Please update your setup to define all sensors under the \"sensors\" key as required by the version 2.0 of the card.',\r\n      );\r\n    }\r\n\r\n    // Validation et transformation des capteurs\r\n    Object.entries(config.sensors).forEach(([sensorType, sensorConfig]) => {\r\n      // Obtenir la configuration par défaut pour ce type de capteur\r\n      const defaultSensorConfig = getSensorConfig(sensorType);\r\n\r\n      // Convertir en tableau si ce n'est pas déjà le cas (rétrocompatibilité)\r\n      const sensorArray = Array.isArray(sensorConfig) ? [...sensorConfig] : [{ ...sensorConfig }];\r\n\r\n      if (sensorArray.length === 0) {\r\n        throw new Error(`Empty sensor array for ${sensorType}`);\r\n      }\r\n\r\n      // Fusionner les valeurs par défaut pour chaque capteur du tableau\r\n      const mergedSensorArray = sensorArray.map(sensor => ({\r\n        ...defaultSensorConfig, // Valeurs par défaut\r\n        ...sensor, // Configuration utilisateur (écrase les valeurs par défaut)\r\n        nameDefinedByUser: !!sensor.name, // Ajoute un boolean si name défini par l'utilisateur\r\n      }));\r\n\r\n      mergedSensorArray.forEach((sensor, index) => {\r\n        if (!sensor.entity) {\r\n          throw new Error(`Missing entity for ${sensorType}[${index}]`);\r\n        }\r\n\r\n        // Si un nom est configuré, l'ajouter au titre\r\n        if (sensor.nameDefinedByUser) {\r\n          sensor.title = sensor.name;\r\n        }\r\n\r\n        // Vérifier si le sensor est supporté\r\n        if (!SUPPORTED_SENSORS.includes(sensorType)) {\r\n          console.warn(`Unsupported sensor type: ${sensorType}`, {\r\n            sensorType,\r\n            supportedSensors: SUPPORTED_SENSORS,\r\n            config: config,\r\n            sensorConfig: sensor,\r\n          });\r\n          sensor.invalid = true;\r\n        } else {\r\n          sensor.invalid = false;\r\n        }\r\n      });\r\n\r\n      // Stocker le tableau de capteurs fusionnés dans le nouvel objet\r\n      newConfig.sensors[sensorType] = mergedSensorArray;\r\n    });\r\n\r\n    this.config = newConfig;\r\n  }\r\n\r\n  /**\r\n   * @method _moreinfo\r\n   * @description Opens the more info popup for an entity\r\n   * @param {string} entityinfo - The entity to open the more info popup for\r\n   */\r\n  static _moreinfo(entityinfo) {\r\n    const popupEvent = new Event('hass-more-info', {\r\n      bubbles: true,\r\n      cancelable: false,\r\n      composed: true,\r\n    });\r\n    popupEvent.detail = { entityId: entityinfo };\r\n    document.querySelector('home-assistant').dispatchEvent(popupEvent);\r\n  }\r\n}\r\n\r\ncustomElements.define('pool-monitor-card', PoolMonitorCard);\r\n"],"names":["en","state","sensor","temperature","ph","orp","tds","salinity","cya","calcium","phosphate","alkalinity","free_chlorine","total_chlorine","pressure","specific_gravity","magnesium","water_level","flow_rate","uv_radiation","product_volume","product_weight","ec","time","seconds","minutes","hours","days","fr","es","de","it","nl","pt","ptBR","ro","sk","he","ru","translations","getTranslation","lang","key","keys","split","result","k","formatTranslation","translation","values","Object","entries","reduce","acc","value","replace","DEFAULT_CONFIG","display","compact","show_names","show_labels","show_last_updated","show_icons","show_units","gradient","language","colors","low","warn","normal","cool","marker","hi_low","sensors","name","unit","setpoint","step","mode","min_limit","getSensorConfig","type","getDisplayConfig","getColorConfig","SUPPORTED_SENSORS","VERSION","BUILD_TIMESTAMP","CARD_VERSION","CARD_INFO","cardType","cardName","cardDescription","CONSOLE_STYLE","title","version","LitElement","getPrototypeOf","customElements","get","css","prototype","styles","html","cardContent","generateTitle","config","undefined","generateBody","data","this","_moreinfo","entity","color","pct_marker","side_align","pct_state_step","pct","hide_icon","is_mdi","mdi_icon","img_src","min","max","pct_min","pct_cursor","pct_max","setpoint_class","last_updated","generateCompactBody","separator","event","Event","bubbles","composed","detail","entityId","document","querySelector","dispatchEvent","console","info","PoolMonitorCard","static","properties","hass","constructor","super","render","getConfig","processData","generateContent","length","map","sensorData","invalid","forEach","sensorType","sensorConfigs","sensorArray","Array","isArray","index","sensorKey","calculateData","getTranslatedText","icon","image_url","override_value","override","entity_min","entity_max","setpoint_step","newData","defaultConfig","sensorIcon","sensorImage","startsWith","states","parseFloat","timeFromNow","min_value","isNaN","max_value","countDecimals","Math","minLimit","Number","Infinity","sp_minus_2","sp_minus_1","sp","sp_plus_1","sp_plus_2","toFixed","progressClass","number","floor","str","toString","includes","dateTime","date","Date","diff","now","getTime","t","n","plural","setConfig","newConfig","Error","sensorConfig","defaultSensorConfig","mergedSensorArray","nameDefinedByUser","supportedSensors","entityinfo","popupEvent","cancelable","define"],"mappings":"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"}